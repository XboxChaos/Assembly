<!--***********************************************************************************

   AvalonDock

   Copyright (C) 2007-2013 Xceed Software Inc.

   This program is provided to you under the terms of the New BSD
   License (BSD) as published at http://avalondock.codeplex.com/license 

   For more features, controls, and fast professional support,
   pick up AvalonDock in Extended WPF Toolkit Plus at http://xceed.com/wpf_toolkit

   Stay informed: follow @datagrid on Twitter or Like facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
	xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
	xmlns:Vectors="clr-namespace:Assembly.Metro.Controls.AvalonDockMetro.Vectors"
	xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
	xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<xcad:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<xcad:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
	<xcad:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
	<xcad:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
	<xcad:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
	<xcad:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
	<xcad:ActivateCommandLayoutItemFromLayoutModelConverter
		x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />

	<Style x:Key="AvalonDock_ThemeMetro_ToolButtonStyle" TargetType="ToggleButton">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
					        Background="{TemplateBinding Background}"
					        BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrush}" />
				<Setter Property="Background"
				        Value="Transparent" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrush}" />
				<Setter Property="Background"
				        Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="AvalonDock_ThemeMetro_ButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
					        Background="{TemplateBinding Background}"
					        BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrush}" />
				<Setter Property="Background"
				        Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--DocumentPaneControlStyle-->
	<Style x:Key="AvalonDock_ThemeMetro_DocumentPaneControlStyle"
	       TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<!--Following border is required to catch mouse events-->
						<Border Background="Transparent" Grid.RowSpan="2" />
						<Grid Panel.ZIndex="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<xcad:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true"
							                                         Margin="2,0,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" />
							<xcad:DropDownButton
								x:Name="MenuDropDownButton"
								Width="16" Height="18"
								Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
								Focusable="False"
								VerticalAlignment="Center"
								Grid.Column="1">
								<xcad:DropDownButton.DropDownContextMenu>
									<xcad:ContextMenuEx
										ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
										<xcad:ContextMenuEx.ItemContainerStyle>
											<Style TargetType="{x:Type xcad:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
												<Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
												<Setter Property="HeaderTemplateSelector"
												        Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
												<Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
												<Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
												<Setter Property="Command"
												        Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
											</Style>
										</xcad:ContextMenuEx.ItemContainerStyle>
										<xcad:ContextMenuEx.Style>
											<Style TargetType="{x:Type xcad:ContextMenuEx}"
											       BasedOn="{StaticResource {x:Type ContextMenu}}">
												<Setter Property="Foreground" Value="White" />
											</Style>
										</xcad:ContextMenuEx.Style>
									</xcad:ContextMenuEx>
								</xcad:DropDownButton.DropDownContextMenu>
								<Path x:Name="ArrowPathData" Data="M 0,4 L 8,4 4,0 Z" Fill="White" RenderTransformOrigin="0.5,0.5"
								      VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,6,0,0">
									<Path.RenderTransform>
										<TransformGroup>
											<RotateTransform Angle="180" />
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
							</xcad:DropDownButton>
						</Grid>
						<Border x:Name="ContentPanel"
						        VerticalAlignment="Stretch"
						        HorizontalAlignment="Stretch"
						        BorderBrush="{DynamicResource ExtryzeAccentBrush}"
						        BorderThickness="0,2,0,0"
						        Background="Transparent"
						        Grid.Column="0"
						        KeyboardNavigation.DirectionalNavigation="Contained"
						        Grid.Row="1"
						        KeyboardNavigation.TabIndex="2"
						        KeyboardNavigation.TabNavigation="Cycle"
						        Padding="0,0,0,0">
							<ContentPresenter x:Name="PART_SelectedContentHost"
							                  ContentSource="SelectedContent"
							                  Margin="0,0,0,0"
							                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
							<Setter Property="Background" TargetName="MenuDropDownButton" Value="#FF3e3e40" />
							<Setter Property="Fill" TargetName="ArrowPathData" Value="{DynamicResource ExtryzeAccentBrush}" />
						</Trigger>

						<Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
							<Setter Property="Background" TargetName="MenuDropDownButton" Value="{DynamicResource ExtryzeAccentBrush}" />
							<Setter Property="Fill" TargetName="ArrowPathData" Value="White" />
						</Trigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}"
								           Value="False" />
								<Condition
									Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}"
									Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
							        Value="Green" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
							<Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TabItem}">
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="Foreground" Value="{StaticResource AvalonDock_ThemeMetro_BaseColor5}" />
					<Setter Property="ToolTip" Value="{Binding ToolTip}" />
					<Setter Property="Padding" Value="4" />
					<Setter Property="Margin" Value="0,0,4,0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TabItem}">
								<Grid SnapsToDevicePixels="true"
								      Margin="0,0,0,0">
									<Border x:Name="Bd"
									        BorderBrush="{TemplateBinding BorderBrush}"
									        BorderThickness="0,0,0,0"
									        Background="{TemplateBinding Background}" />
									<ContentPresenter
										x:Name="Content"
										Margin="8,1,2,1"
										ContentSource="Header"
										HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="Selector.IsSelected" Value="true">
										<Setter Property="BorderBrush" Value="{StaticResource AvalonDock_ThemeMetro_BaseColor5}" />
										<Setter Property="Panel.ZIndex" Value="1" />
									</Trigger>

									<DataTrigger Binding="{Binding IsActive}" Value="True">
										<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrush}" />
										<Setter Property="Background" Value="{DynamicResource ExtryzeAccentBrush}" />
										<Setter Property="Foreground" Value="White" />
										<Setter Property="Panel.ZIndex" Value="1" />
									</DataTrigger>

									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="true" />
											<Condition Property="Selector.IsSelected" Value="false" />
										</MultiTrigger.Conditions>
										<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
										<Setter Property="Background" Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
										<Setter Property="Foreground" Value="{StaticResource AvalonDock_ThemeMetro_BaseColor5}" />
										<Setter Property="Panel.ZIndex" Value="0" />
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<xcad:LayoutDocumentTabItem Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<xcad:LayoutDocumentControl Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--AnchorablePaneControlStyle-->
	<Style x:Key="AvalonDock_ThemeMetro_AnchorablePaneControlStyle"
	       TargetType="{x:Type xcad:LayoutAnchorablePaneControl}">
		<Setter Property="TabStripPlacement" Value="Bottom" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="#2d2d30" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="#d0d0d0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutAnchorablePaneControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<!--Following border is required to catch mouse events-->
						<Border Background="Transparent" Grid.RowSpan="2" />
						<Border x:Name="ContentPanel"
						        BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        Background="{TemplateBinding Background}"
						        Grid.Column="0"
						        KeyboardNavigation.DirectionalNavigation="Contained"
						        Grid.Row="0"
						        KeyboardNavigation.TabIndex="2"
						        KeyboardNavigation.TabNavigation="Cycle">
							<ContentPresenter x:Name="PART_SelectedContentHost"
							                  ContentSource="SelectedContent"
							                  Margin="{TemplateBinding Padding}"
							                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<xcad:AnchorablePaneTabPanel x:Name="HeaderPanel" Margin="0,0,2,2" IsItemsHost="true" Grid.Row="1"
						                                           KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
							<Setter Property="Margin" Value="0" TargetName="HeaderPanel" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TabItem}">
					<Setter Property="Background" Value="#2d2d30" />
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="Foreground" Value="#d0d0d0" />
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter Property="ToolTip" Value="{Binding ToolTip}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TabItem}">
								<Grid SnapsToDevicePixels="true">
									<Border x:Name="Bd"
									        BorderBrush="{x:Null}"
									        Margin="4"
									        Background="{TemplateBinding Background}"
									        Padding="{TemplateBinding Padding}">
										<ContentPresenter
											x:Name="Content"
											ContentSource="Header"
											HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
											VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="Selector.IsSelected" Value="true">
										<Setter Property="Panel.ZIndex" Value="1" />
									</Trigger>

									<DataTrigger Binding="{Binding IsActive}" Value="True">
										<Setter Property="Background" Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
										<Setter Property="Panel.ZIndex"
										        Value="1" />
									</DataTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="true" />
											<Condition Property="Selector.IsSelected" Value="false" />
										</MultiTrigger.Conditions>
										<Setter Property="Panel.ZIndex" Value="0" />
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor13}" />
										<Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor9}" />
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<DataTrigger
							Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}"
							Value="1">
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<xcad:LayoutAnchorableTabItem Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<xcad:LayoutAnchorableControl Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="xcad:AnchorablePaneTitle">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        SnapsToDevicePixels="True"
					        Height="21">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<xcad:DropDownControlArea
								Grid.Column="0"
								Foreground="White"
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
								<ContentPresenter
									x:Name="Header"
									SnapsToDevicePixels="True"
									Margin="4,0,4,0"
									TextElement.Foreground="White"
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
							</xcad:DropDownControlArea>

							<Grid Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch">
								<Grid.Background>
									<ImageBrush TileMode="Tile" Stretch="None"
									            ImageSource="/Assembly;component/Metro/Images/DockPanelImageTile.png" />
								</Grid.Background>
							</Grid>

							<xcad:DropDownButton
								x:Name="MenuDropDownButton"
								VerticalAlignment="Center"
								Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
								Focusable="False"
								Grid.Column="2"
								Foreground="White"
								Width="15" Height="15"
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
								<Path x:Name="ArrowPathData" Data="M 0,4 L 8,4 4,0 Z" Fill="White" RenderTransformOrigin="0.5,0.5"
								      VerticalAlignment="Top" HorizontalAlignment="Center"
								      Margin="0,4,0,0">
									<Path.RenderTransform>
										<TransformGroup>
											<RotateTransform Angle="180" />
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
							</xcad:DropDownButton>
							<Button x:Name="PART_AutoHidePin"
							        Grid.Column="3"
							        Focusable="False"
							        Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
							        VerticalAlignment="Center"
							        HorizontalAlignment="Center"
							        Width="15" Height="15"
							        Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
							        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
							        ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}">
								<Grid x:Name="AutoHidePin" Width="13" Height="13">
									<Grid Width="7" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center">
										<!-- Top -->
										<Rectangle Fill="White" Margin="1,0,0,0" Width="5" Height="1" VerticalAlignment="Top"
										           HorizontalAlignment="Left" />

										<!-- Right -->
										<Rectangle Fill="White" Margin="1,1,0,0" Width="1" Height="5" VerticalAlignment="Top"
										           HorizontalAlignment="Left" />

										<!-- Left -->
										<Rectangle Fill="White" Margin="4,1,0,0" Width="2" Height="5" VerticalAlignment="Top"
										           HorizontalAlignment="Left" />

										<!-- Base -->
										<Rectangle Fill="White" Margin="0,6,0,0" Width="7" Height="1" VerticalAlignment="Top"
										           HorizontalAlignment="Left" />

										<!-- Pin -->
										<Rectangle Fill="White" Margin="3,7,0,0" Width="1" Height="3" VerticalAlignment="Top"
										           HorizontalAlignment="Left" />
									</Grid>
								</Grid>
							</Button>
							<Button x:Name="PART_HidePin"
							        Grid.Column="4"
							        Focusable="False"
							        Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
							        VerticalAlignment="Center"
							        HorizontalAlignment="Center"
							        Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
							        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
							        ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}">
								<Path x:Name="PART_ImgHidePin" Fill="White"
								      Data="F1 M 0,32.505L 13.4025,19.1025L 0,5.69249L 5.67,-7.62939e-006L 19.08,13.41L 32.505,-7.62939e-006L 38.205,5.67L 24.7725,19.1025L 38.205,32.535L 32.505,38.205L 19.08,24.795L 5.67,38.205L 0,32.505 Z"
								      Stretch="Fill" />
							</Button>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
							<Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
						</DataTrigger>
						<DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
							<Setter Property="Background" Value="{DynamicResource ExtryzeAccentBrush}" />
						</DataTrigger>

						<Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
							<Setter Property="Background" TargetName="MenuDropDownButton" Value="#33FFFFFF" />
						</Trigger>
						<Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
							<Setter Property="Background" TargetName="MenuDropDownButton" Value="{DynamicResource ExtryzeAccentBrush}" />
						</Trigger>

						<Trigger Property="IsMouseOver" SourceName="PART_AutoHidePin" Value="True">
							<Setter Property="Background" TargetName="AutoHidePin" Value="#33FFFFFF" />
						</Trigger>
						<!--<Trigger Property="IsChecked" SourceName="PART_AutoHidePin" Value="True">
							<Setter Property="Background" TargetName="AutoHidePin" Value="{DynamicResource ExtryzeAccentBrush}" />
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorSideTemplate"
	                 TargetType="{x:Type xcad:LayoutAnchorSideControl}">
		<ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel
						MinWidth="4"
						MinHeight="4"
						Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type xcad:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</ControlTemplate>

	<ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorGroupTemplate"
	                 TargetType="{x:Type xcad:LayoutAnchorGroupControl}">
		<ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
			<ItemsControl.LayoutTransform>
				<RotateTransform
					Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
			</ItemsControl.LayoutTransform>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</ControlTemplate>

	<ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorTemplate"
	                 TargetType="{x:Type xcad:LayoutAnchorControl}">
		<Border
			x:Name="Bd"
			BorderThickness="0,2,0,0"
			BorderBrush="{TemplateBinding BorderBrush}"
			Margin="4"
			Padding="2">
			<ContentPresenter
				TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}"
				Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
				ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"
				ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Side" Value="Right">
				<Setter Property="BorderThickness" Value="0,0,0,2" TargetName="Bd" />
			</Trigger>
			<Trigger Property="Side" Value="Bottom">
				<Setter Property="BorderThickness" Value="0,2,0,0" TargetName="Bd" />
			</Trigger>
			<Trigger Property="Side" Value="Top">
				<Setter Property="BorderThickness" Value="0,0,0,2" TargetName="Bd" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="true" />
					<Condition Property="Selector.IsSelected" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
			</MultiTrigger>
			<DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="true">
				<Setter Property="BorderBrush" Value="{DynamicResource ExtryzeAccentBrush}" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="{x:Type xcad:OverlayWindow}" TargetType="{x:Type xcad:OverlayWindow}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:OverlayWindow}">
					<Canvas x:Name="PART_DropTargetsContainer" Opacity="0.6">
						<Path x:Name="PART_PreviewBox" Fill="{DynamicResource ExtryzeAccentBrushSecondary}" StrokeThickness="5"
						      Stroke="DimGray" />
						<Grid x:Name="PART_DockingManagerDropTargets">
							<Border x:Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left"
							        Background="#1c1c1d" BorderBrush="#2d2d2f" BorderThickness="1">
								<Vectors:DockDocumentAsAnchorableLeft VerticalAlignment="Center" HorizontalAlignment="Center" />
							</Border>
							<Border x:Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right"
							        Background="#1c1c1d" BorderBrush="#2d2d2f" BorderThickness="1">
								<Vectors:DockDocumentAsAnchorableRight VerticalAlignment="Center" HorizontalAlignment="Center" />
							</Border>
							<Border x:Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"
							        Background="#1c1c1d" BorderBrush="#2d2d2f" BorderThickness="1">
								<Vectors:DockDocumentAsAnchorableBottom VerticalAlignment="Center" HorizontalAlignment="Center" />
							</Border>
							<Border x:Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center"
							        Background="#1c1c1d" BorderBrush="#2d2d2f" BorderThickness="1">
								<Vectors:DockDocumentAsAnchorableTop VerticalAlignment="Center" HorizontalAlignment="Center" />
							</Border>
						</Grid>
						<Grid x:Name="PART_AnchorablePaneDropTargets">
							<Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Vectors:DockPaneEmpty Grid.ColumnSpan="3" Grid.RowSpan="3" />
								<Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0">
									<Vectors:DockDocumentAsAnchorableTop />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1">
									<Vectors:DockDocumentAsAnchorableRight />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2">
									<Vectors:DockDocumentAsAnchorableBottom />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1">
									<Vectors:DockDocumentAsAnchorableLeft />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1">
									<Vectors:DockDocumentInside />
								</Border>
							</Grid>
						</Grid>
						<Grid x:Name="PART_DocumentPaneDropTargets">
							<Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Vectors:DockPaneEmpty Grid.ColumnSpan="3" Grid.RowSpan="3" />
								<Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0">
									<Vectors:DockDocumentTop />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1">
									<Vectors:DockDocumentRight />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2">
									<Vectors:DockDocumentBottom />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1">
									<Vectors:DockDocumentLeft />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
									<Vectors:DockDocumentInside />
								</Border>
							</Grid>
						</Grid>

						<Grid x:Name="PART_DocumentPaneFullDropTargets">
							<Grid Width="184" Height="184" VerticalAlignment="Center" HorizontalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Vectors:DockPaneLargeEmpty Grid.ColumnSpan="5" Grid.RowSpan="5" />
								<Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Column="2" Grid.Row="1">
									<Vectors:DockDocumentTop />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Column="3" Grid.Row="2">
									<Vectors:DockDocumentRight />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Column="2" Grid.Row="3">
									<Vectors:DockDocumentBottom />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Column="1" Grid.Row="2">
									<Vectors:DockDocumentLeft />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Column="2" Grid.Row="2">
									<Vectors:DockDocumentInside />
								</Border>

								<Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Column="2" Grid.Row="0">
									<Vectors:DockDocumentAsAnchorableTop />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Column="4" Grid.Row="2">
									<Vectors:DockDocumentAsAnchorableRight />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Column="2" Grid.Row="4">
									<Vectors:DockDocumentAsAnchorableBottom />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Column="0" Grid.Row="2">
									<Vectors:DockDocumentAsAnchorableLeft />
								</Border>

							</Grid>
						</Grid>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="AvalonDock_ThemeMetro_DocumentHeaderTemplate">
		<TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
	</DataTemplate>

	<DataTemplate x:Key="AvalonDock_ThemeMetro_AnchorableHeaderTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Image x:Name="icon" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
			       Stretch="Uniform" />
			<TextBlock x:Name="title" Margin="4,0,0,0" Text="{Binding Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" />
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
				<Setter Property="Margin" Value="0" TargetName="title" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="AvalonDock_ThemeMetro_DocumentTitleTemplate">
		<TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
	</DataTemplate>

	<DataTemplate x:Key="AvalonDock_ThemeMetro_AnchorableTitleTemplate">
		<TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
	</DataTemplate>

	<DataTemplate x:Key="AvalonDock_ThemeMetro_IconContentTemplate">
		<Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
	</DataTemplate>

	<ContextMenu x:Key="AvalonDock_ThemeMetro_AnchorableContextMenu">
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}"
		          Command="{Binding Path=FloatCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}"
		          Command="{Binding Path=DockCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}"
		          Command="{Binding Path=DockAsDocumentCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}"
		          Command="{Binding Path=AutoHideCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
		          Command="{Binding Path=CloseCommand}"
		          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
	</ContextMenu>

	<ContextMenu x:Key="AvalonDock_ThemeMetro_DocumentContextMenu" Foreground="White">
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Close}"
		          Command="{Binding Path=CloseCommand}"
		          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}"
		          Command="{Binding Path=CloseAllButThisCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Float}"
		          Command="{Binding Path=FloatCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}"
		          Command="{Binding Path=DockAsDocumentCommand}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
		          Command="{Binding Path=NewHorizontalTabGroupCommand}"
		          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
			<!--<MenuItem.Icon>
				<Vectors:HTabGroup />
			</MenuItem.Icon>-->
		</MenuItem>

		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
		          Command="{Binding Path=NewVerticalTabGroupCommand}"
		          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
			<!--<MenuItem.Icon>
				<Vectors:VTabGroup />
			</MenuItem.Icon>-->
		</MenuItem>
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
		          Command="{Binding Path=MoveToNextTabGroupCommand}"
		          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
		          Command="{Binding Path=MoveToPreviousTabGroupCommand}"
		          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
	</ContextMenu>

	<!--DockingManager-->
	<Style x:Key="{x:Type xcad:DockingManager}" TargetType="{x:Type xcad:DockingManager}">
		<Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
		<Setter Property="DocumentPaneControlStyle" Value="{StaticResource AvalonDock_ThemeMetro_DocumentPaneControlStyle}" />
		<Setter Property="AnchorablePaneControlStyle"
		        Value="{StaticResource AvalonDock_ThemeMetro_AnchorablePaneControlStyle}" />
		<Setter Property="AnchorSideTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorSideTemplate}" />
		<Setter Property="AnchorGroupTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorGroupTemplate}" />
		<Setter Property="AnchorTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorTemplate}" />
		<Setter Property="DocumentHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentHeaderTemplate}" />
		<Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableHeaderTemplate}" />
		<Setter Property="DocumentTitleTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentTitleTemplate}" />
		<Setter Property="AnchorableTitleTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableTitleTemplate}" />
		<Setter Property="AnchorableContextMenu" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableContextMenu}" />
		<Setter Property="DocumentContextMenu" Value="{StaticResource AvalonDock_ThemeMetro_DocumentContextMenu}" />
		<Setter Property="DocumentPaneMenuItemHeaderTemplate"
		        Value="{StaticResource AvalonDock_ThemeMetro_DocumentHeaderTemplate}" />
		<Setter Property="IconContentTemplate" Value="{StaticResource AvalonDock_ThemeMetro_IconContentTemplate}" />
		<Setter Property="GridSplitterWidth" Value="5" />
		<Setter Property="GridSplitterHeight" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:DockingManager}">
					<Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter Content="{TemplateBinding LayoutRootPanel}" Grid.Column="1" Grid.Row="1" />
							<ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1" />
							<ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1" />
							<ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0" />
							<ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2" />
							<ContentPresenter
								x:Name="PART_AutoHideArea"
								Content="{TemplateBinding AutoHideWindow}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Grid.Column="1" Grid.Row="1" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--LayoutGridResizerControl-->
	<Style x:Key="{x:Type xcad:LayoutGridResizerControl}"
	       TargetType="{x:Type xcad:LayoutGridResizerControl}">
		<Setter Property="Background" Value="#FF2D2D30" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutGridResizerControl}">
					<Border Background="{TemplateBinding Background}" Margin="0,2,0,2">
						<Rectangle Width="2" Margin="3,0,0,0" HorizontalAlignment="Stretch">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF2D2D30" Offset="0" />
									<GradientStop Color="#FF3D3D44" Offset="0.5" />
									<GradientStop Color="#FF2D2D30" Offset="1" />
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xcad:LayoutDocumentControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutDocumentControl}">
					<Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xcad:LayoutDocumentTabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutDocumentTabItem}">
					<xcad:DropDownControlArea
						DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
						DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
						<Border Background="Transparent"
						        BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        Padding="0,2,0,1">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Border Grid.ColumnSpan="2" Background="Transparent" />
								<ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
								                  ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"
								                  ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}" />

								<!-- Close button should be moved out to the container style -->
								<Button
									x:Name="DocumentCloseButton"
									Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									Grid.Column="1"
									Margin="5,0,0,0"
									Height="16" Width="16"
									Visibility="Hidden"
									Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
									ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}">
									<Path x:Name="PART_ImgPinClose" Height="8" Width="8"
									      Stretch="Fill" StrokeThickness="0.5" Stroke="White" Fill="White"
									      Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z "
									      HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Button>
							</Grid>
						</Border>
					</xcad:DropDownControlArea>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=IsLastFocusedDocument}" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=IsActive}" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton" />
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton" />
							<Setter Property="Background" TargetName="DocumentCloseButton" Value="{DynamicResource ExtryzeAccentBrush}" />
						</Trigger>
						<DataTrigger Binding="{Binding Path=CanClose}" Value="false">
							<Setter Property="Visibility" Value="Collapsed" TargetName="DocumentCloseButton" />
						</DataTrigger>

						<Trigger Property="IsMouseOver" SourceName="DocumentCloseButton" Value="True">
							<Setter Property="Background" TargetName="DocumentCloseButton"
							        Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xcad:LayoutAnchorableTabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableTabItem}">
					<xcad:DropDownControlArea
						DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
						DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
						<Border Background="{TemplateBinding Background}"
						        BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
								                  ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"
								                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}" />
								<xcad:DropDownControlArea
									Grid.Column="0"
									DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
									DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid>
						</Border>
					</xcad:DropDownControlArea>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xcad:LayoutAnchorableControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableControl}">
					<Border
						x:Name="Bd"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Border x:Name="Header"
							        Background="Transparent">
								<xcad:AnchorablePaneTitle
									Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
							</Border>
							<ContentPresenter
								Grid.Row="1"
								FlowDirection="{TemplateBinding FlowDirection}"
								Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />

							<!--<ContentPresenter 
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>-->
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
								<Condition
									Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}"
									Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Visibility" Value="Collapsed" TargetName="Header" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type xcad:LayoutDocumentFloatingWindowControl}"
	       TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}">
		<Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
		<Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}" />
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome
					CornerRadius="0"
					ResizeBorderThickness="10"
					CaptionHeight="24"
					GlassFrameThickness="0"
					ShowSystemMenu="False" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}">
					<Grid>
						<Border x:Name="WindowBorder"

						        BorderThickness="4"
						        BorderBrush="{DynamicResource ExtryzeAccentBrush}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="24" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>

								<Border x:Name="bd" Width="5" VerticalAlignment="Stretch" Background="{DynamicResource ExtryzeAccentBrush}" />

								<Border x:Name="Header"
								        Padding="2,0,2,0"
								        Grid.Column="1">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<ContentPresenter
											TextElement.Foreground="White"
											Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />


										<xcad:DropDownButton
											x:Name="ContextMenuDropdownButton"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
											Focusable="False"
											Grid.Column="1"
											Width="18" Height="18"
											VerticalAlignment="Center"
											HorizontalAlignment="Center"
											VerticalContentAlignment="Center"
											HorizontalContentAlignment="Center"
											DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
											DropDownContextMenuDataContext="{Binding Path=RootDocumentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
											ToolTip="{x:Static avalonDockProperties:Resources.Document_CxMenu_Hint}">
											<Path x:Name="ArrowPathData" Data="M 0,4 L 8,4 4,0 Z" Fill="White" RenderTransformOrigin="0.5,0.5"
											      VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,6,0,0">
												<Path.RenderTransform>
													<TransformGroup>
														<RotateTransform Angle="180" />
													</TransformGroup>
												</Path.RenderTransform>
											</Path>
										</xcad:DropDownButton>

										<Button
											x:Name="PART_PinMaximize"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Focusable="False"
											Width="18" Height="18"
											Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
											Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
											Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
											Grid.Column="2">
											<Grid>
												<Grid Width="9" Height="8" VerticalAlignment="Center">
													<!-- Top -->
													<Rectangle Width="9" Height="2" Fill="White" Margin="0,0,0,0" VerticalAlignment="Top"
													           HorizontalAlignment="Left" />

													<!-- Left -->
													<Rectangle Width="1" Height="5" Fill="White" Margin="0,2,0,0" VerticalAlignment="Top"
													           HorizontalAlignment="Left" />

													<!-- Right -->
													<Rectangle Width="1" Height="5" Fill="White" Margin="8,2,0,0" VerticalAlignment="Top"
													           HorizontalAlignment="Left" />

													<!-- Top -->
													<Rectangle Width="9" Height="1" Fill="White" Margin="0,7,0,0" VerticalAlignment="Top"
													           HorizontalAlignment="Left" />
												</Grid>
											</Grid>
										</Button>

										<Button
											x:Name="PART_PinRestore"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Focusable="False"
											Width="18" Height="18"
											Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
											Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
											Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
											Grid.Column="2">
											<Image x:Name="PART_ImgPinRestore"
											       Source="/Assembly;component/Metro/Controls/AvalonDockMetro/Images/PinRestore.png"
											       VerticalAlignment="Center" HorizontalAlignment="Center" Width="13" />
										</Button>

										<Button
											x:Name="PART_PinClose"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Focusable="False" Height="18" Width="18"
											Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
											Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
											ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
											Grid.Column="3">
											<Path x:Name="PART_ImgPinClose" Height="8" Width="8" Stretch="Fill" StrokeThickness="0.5" Stroke="White" Fill="White"
												Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z "
												HorizontalAlignment="Center" VerticalAlignment="Center" />
										</Button>
									</Grid>
								</Border>
								<ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1" Grid.ColumnSpan="2" />
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter Property="Padding" Value="3" TargetName="WindowBorder" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}"
						             Value="True">
							<Setter
								TargetName="bd"
								Property="Background"
								Value="{DynamicResource ExtryzeAccentBrush}" />
							<Setter
								TargetName="Header"
								Property="Background"
								Value="{DynamicResource ExtryzeAccentBrush}" />
						</DataTrigger>

						<Trigger Property="IsMouseOver" SourceName="ContextMenuDropdownButton" Value="True">
							<Setter Property="Background" TargetName="ContextMenuDropdownButton" Value="#33FFFFFF" />
						</Trigger>
						<Trigger Property="IsChecked" SourceName="ContextMenuDropdownButton" Value="True">
							<Setter Property="Background" TargetName="ContextMenuDropdownButton"
							        Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
						</Trigger>

						<Trigger Property="IsMouseOver" SourceName="PART_PinMaximize" Value="True">
							<Setter Property="Background" TargetName="PART_PinMaximize" Value="#33FFFFFF" />
						</Trigger>

						<Trigger Property="IsMouseOver" SourceName="PART_PinRestore" Value="True">
							<Setter Property="Background" TargetName="PART_PinRestore" Value="#33FFFFFF" />
						</Trigger>

						<Trigger Property="IsMouseOver" SourceName="PART_PinClose" Value="True">
							<Setter Property="Background" TargetName="PART_PinClose" Value="#33FFFFFF" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>

			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type xcad:LayoutAnchorableFloatingWindowControl}"
	       TargetType="{x:Type xcad:LayoutAnchorableFloatingWindowControl}">
		<Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome
					CornerRadius="0"
					ResizeBorderThickness="10"
					CaptionHeight="24"
					GlassFrameThickness="0" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableFloatingWindowControl}">
					<Grid>
						<Border x:Name="WindowBorder"
						        BorderThickness="1"
						        Background="{TemplateBinding Background}"
						        BorderBrush="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="24" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Border x:Name="Header"
								        Padding="2,0,2,0"
								        TextElement.Foreground="White"
								        Background="#FF2d2d30">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<Border
											Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
											<xcad:DropDownControlArea
												Foreground="White"
												Margin="5,0,0,0"
												DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
												DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
												<ContentPresenter
													Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
													ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
													ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
											</xcad:DropDownControlArea>
										</Border>

										<xcad:DropDownButton
											x:Name="SinglePaneContextMenu"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
											Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
											Focusable="False"
											Grid.Column="1"
											Width="18" Height="18"
											VerticalAlignment="Center"
											HorizontalAlignment="Center"
											VerticalContentAlignment="Center"
											HorizontalContentAlignment="Center"
											DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
											DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
											ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
											<Path x:Name="ArrowPathData" Data="M 0,4 L 8,4 4,0 Z" Fill="White" RenderTransformOrigin="0.5,0.5"
											      VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,6,0,0">
												<Path.RenderTransform>
													<TransformGroup>
														<RotateTransform Angle="180" />
													</TransformGroup>
												</Path.RenderTransform>
											</Path>
										</xcad:DropDownButton>

										<Button
											x:Name="PART_PinClose"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Focusable="False"
											Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
											Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
											Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
											ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
											Grid.Column="3" />
									</Grid>
								</Border>
								<ContentPresenter
									Content="{TemplateBinding Content}" Grid.Row="1" />
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter Property="Padding" Value="3" TargetName="WindowBorder" />
						</Trigger>
						<DataTrigger
							Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}"
							Value="True">
							<Setter Property="Background" Value="{DynamicResource ExtryzeAccentBrush}" TargetName="Header" />
						</DataTrigger>

						<Trigger Property="IsMouseOver" SourceName="SinglePaneContextMenu" Value="True">
							<Setter Property="Background" TargetName="SinglePaneContextMenu" Value="#33FFFFFF" />
						</Trigger>
						<Trigger Property="IsChecked" SourceName="SinglePaneContextMenu" Value="True">
							<Setter Property="Background" TargetName="SinglePaneContextMenu"
							        Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type xcad:LayoutAutoHideWindowControl}"
	       TargetType="{x:Type xcad:LayoutAutoHideWindowControl}">
		<Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
	</Style>


	<Style x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemHoverFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF1FBFF" Offset="0" />
		<GradientStop Color="#FFD5F1FE" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill" EndPoint="0,1"
	                     StartPoint="0,0">
		<GradientStop Color="#FFD9F4FF" Offset="0" />
		<GradientStop Color="#FF9BDDFB" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedInactiveFill" EndPoint="0,1"
	                     StartPoint="0,0">
		<GradientStop Color="#FFEEEDED" Offset="0" />
		<GradientStop Color="#FFDDDDDD" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedHoverFill" EndPoint="0,1"
	                     StartPoint="0,0">
		<GradientStop Color="#FFEAF9FF" Offset="0" />
		<GradientStop Color="#FFC9EDFD" Offset="1" />
	</LinearGradientBrush>

	<Style x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle" TargetType="ListBoxItem">
		<Setter Property="FocusVisualStyle"
		        Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemFocusVisual}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5,0,5,0" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        Background="{TemplateBinding Background}"
					        SnapsToDevicePixels="true">
						<Border x:Name="InnerBorder" BorderThickness="1">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="11" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed" />
								<ContentPresenter Grid.RowSpan="2"
								                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background"
							        Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill}" />
							<Setter Property="BorderBrush" Value="#FF98DDFB" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF" />
							<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible" />
							<Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background"
							        Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill}" />
							<Setter Property="BorderBrush" Value="#FF98DDFB" />
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF" />
							<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible" />
							<Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF" />
						</Trigger>
						<!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedHoverFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                        </MultiTrigger>-->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type xcad:NavigatorWindow}" TargetType="{x:Type xcad:NavigatorWindow}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="SizeToContent" Value="WidthAndHeight" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome
					ResizeBorderThickness="10"
					CaptionHeight="16"
					GlassFrameThickness="4" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xcad:NavigatorWindow}">
					<Grid>
						<Border x:Name="WindowBorder" BorderThickness="1"
						        Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}"
						        BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="54" />
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Grid Margin="5">
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>
										<Image
											Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
											Stretch="None"
											Visibility="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource BoolToVisibilityConverter} }" />
										<TextBlock Text="{Binding SelectedDocument.LayoutElement.Title}" TextTrimming="CharacterEllipsis"
										           Grid.Column="1" VerticalAlignment="Center" FontWeight="Bold" Margin="4,0,0,0" />
									</Grid>
									<TextBlock Text="{Binding SelectedDocument.LayoutElement.Description}" TextTrimming="CharacterEllipsis"
									           VerticalAlignment="Center" />
								</Grid>

								<Border Grid.Row="1"
								        BorderBrush="{DynamicResource AvalonDock_ThemeMetro_BaseColor11}"
								        BorderThickness="0,1,0,0"
								        Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor7}"
								        MinHeight="200">
									<Grid Margin="5">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>
										<Grid Margin="5">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition />
											</Grid.RowDefinitions>
											<TextBlock Text="Active Tool Windows" FontWeight="Bold" Margin="0,3,0,4" />
											<ListBox Grid.Row="1"
											         ItemsSource="{Binding Anchorables}"
											         SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}"
											         ItemContainerStyle="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle}"
											         Background="Transparent"
											         BorderThickness="0"
											         MaxHeight="400">
												<ListBox.ItemTemplate>
													<DataTemplate>
														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="16" />
																<ColumnDefinition Width="150" />
															</Grid.ColumnDefinitions>
															<Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
															       Stretch="None" />
															<TextBlock Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1"
															           Margin="4,0,0,0" />
														</Grid>
													</DataTemplate>
												</ListBox.ItemTemplate>
											</ListBox>
										</Grid>
										<Grid Grid.Column="1" Margin="5">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition />
											</Grid.RowDefinitions>
											<TextBlock Text="Active Files" FontWeight="Bold" Margin="0,3,0,4" />
											<ListBox
												Grid.Row="1"
												ItemsSource="{Binding Documents}"
												SelectedItem="{Binding SelectedDocument, Mode=TwoWay}"
												ItemContainerStyle="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle}"
												Background="Transparent"
												BorderThickness="0"
												MaxHeight="400">
												<ListBox.ItemTemplate>
													<DataTemplate>
														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="16" />
																<ColumnDefinition Width="150" />
															</Grid.ColumnDefinitions>
															<Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
															       Stretch="None" />
															<TextBlock Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1"
															           Margin="4,0,0,0" />
														</Grid>
													</DataTemplate>
												</ListBox.ItemTemplate>
												<ListBox.ItemsPanel>
													<ItemsPanelTemplate>
														<WrapPanel Orientation="Vertical" />
													</ItemsPanelTemplate>
												</ListBox.ItemsPanel>
											</ListBox>
										</Grid>
									</Grid>
								</Border>

								<Grid Grid.Row="2" Margin="5">
									<TextBlock Text="{Binding SelectedDocument.LayoutElement.ToolTip}" VerticalAlignment="Center" />
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>
</ResourceDictionary>
