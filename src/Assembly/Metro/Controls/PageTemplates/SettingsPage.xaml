<UserControl x:Class="Assembly.Metro.Controls.PageTemplates.SettingsPage"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 mc:Ignorable="d"
			 Background="#28282b"
			 d:DesignHeight="1200" d:DesignWidth="1400">
	<UserControl.Resources>
		<!-- General -->
		<Storyboard x:Key="ShowGeneralTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="GeneralSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="GeneralSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="GeneralSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="-30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideGeneralTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="GeneralSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="1" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="GeneralSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
				<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="GeneralSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>

		<!-- Xbox 360 Dev -->
		<Storyboard x:Key="ShowXboxDevTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="Xbox360DevSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="Xbox360DevSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="Xbox360DevSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="-30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideXboxDevTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="Xbox360DevSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="1" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="Xbox360DevSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
				<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="Xbox360DevSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>

		<!-- Map Editor -->
		<Storyboard x:Key="ShowMapEditTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="MapEditSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="MapEditSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="MapEditSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="-30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideMapEditTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="MapEditSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="1" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="MapEditSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
				<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="MapEditSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>

		<!-- Plugins -->
		<Storyboard x:Key="ShowPluginsTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="StartPageSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="-30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HidePluginsTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="1" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
				<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="StartPageSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>

		<!-- Start Page-->
		<Storyboard x:Key="ShowStartPageTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="StartPageSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="-30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideStartPageTab">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<EasingDoubleKeyFrame KeyTime="0" Value="1" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
										   Storyboard.TargetName="StartPageSettingsPanel">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
				<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
			</ObjectAnimationUsingKeyFrames>
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
											  Storyboard.TargetName="StartPageSettingsPanel">
				<EasingThicknessKeyFrame KeyTime="0" Value="30,0,0,0" />
				<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-30,0,0,0" />
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>

		<Style x:Key="SettingPageTitle" TargetType="{x:Type TextBlock}">
			<Setter Property="FontSize" Value="30"/>
			<Setter Property="Foreground" Value="{DynamicResource ExtryzeAccentBrush}"/>
			<Setter Property="FontFamily" Value="{DynamicResource MetroFontSemiLight}" />
			<Setter Property="Margin" Value="0" />
		</Style>
		<Style x:Key="SettingPageSubTitle" TargetType="{x:Type TextBlock}">
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Foreground" Value="{DynamicResource ExtryzeAccentBrushSecondary}"/>
			<Setter Property="FontFamily" Value="{DynamicResource MetroFontSemiLight}" />
			<Setter Property="Margin" Value="0,4,0,10" />
		</Style>
		<Style x:Key="SettingDescription" TargetType="{x:Type TextBlock}">
			<Setter Property="TextWrapping" Value="NoWrap"/>
			<Setter Property="TextTrimming" Value="None"/>
			<Setter Property="FontSize" Value="9.5"/>
			<Setter Property="Foreground" Value="#888"/>
			<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}" />
			<Setter Property="Margin" Value="0,4,0,0" />
		</Style>
		<Style x:Key="SettingName" TargetType="{x:Type TextBlock}">
			<Setter Property="TextWrapping" Value="NoWrap"/>
			<Setter Property="TextTrimming" Value="None"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Foreground" Value="#fff"/>
			<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}" />
			<Setter Property="Margin" Value="0" />
		</Style>
		<Style x:Key="SettingEntry" TargetType="{x:Type Grid}">
			<Setter Property="Margin" Value="15,20,0,0" />
		</Style>
	</UserControl.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="350" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Path Style="{StaticResource GearIcon}" Fill="White" OpacityMask="#FF7A7A7A" Opacity="0.05"
			  HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="338" Width="338" Margin="320,0,0,-77"
			   Grid.ColumnSpan="2" RenderTransformOrigin="0.5,0.5" >
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="22.5"/>
					<TranslateTransform/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>
		<Grid Grid.Column="0" Background="#2d2d30">
			<Grid Margin="0,36,0,0" Height="48" VerticalAlignment="Top">
				<TextBlock FontFamily="{DynamicResource MetroFontLight}" Text="Settings" Foreground="White" FontSize="32"
			           Margin="25,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" />
				<Polygon Points="0,0 20,24 0,48" Fill="#FF4A4A4C" HorizontalAlignment="Left" VerticalAlignment="Center" />
			</Grid>

			<Rectangle Fill="#FF363639" Height="1" Margin="25,114,25,0" VerticalAlignment="Top"
			           d:LayoutOverrides="Height" />
			<StackPanel VerticalAlignment="Top" Margin="25,120,15,20">

				<ToggleButton x:Name="ButtonSelectGeneral" Content="General" Margin="0,25,0,0" HorizontalAlignment="Left"
							  Style="{DynamicResource ToggleTabChoser}"
							  Tag="General" Click="ButtonTabSelection_OnClick" />
				<ToggleButton x:Name="ButtonSelectXbox360Dev" Content="Xbox Development" Margin="0,0,0,0" HorizontalAlignment="Left"
							  Style="{DynamicResource ToggleTabChoser}"
							  Tag="XboxDev" Click="ButtonTabSelection_OnClick" />
				<ToggleButton x:Name="ButtonSelectMapEdit" Content="Map Editor" Margin="0,0,0,0" HorizontalAlignment="Left"
							  Style="{DynamicResource ToggleTabChoser}"
							  Tag="MapEdit" Click="ButtonTabSelection_OnClick" />
				<ToggleButton x:Name="ButtonSelectStartPage" Content="Start Page" Margin="0,0,0,0" HorizontalAlignment="Left"
							  Style="{DynamicResource ToggleTabChoser}"
							  Tag="StartPage" Click="ButtonTabSelection_OnClick" />
			</StackPanel>

		</Grid>

		<GridSplitter Grid.Column="0" Width="2" Background="#FF545456" Foreground="{x:Null}" ResizeDirection="Columns" IsEnabled="False" />

		<Grid Grid.Column="1" Margin="30,0,0,40">
			<Grid x:Name="GeneralSettingsPanel" Visibility="Visible">
				<StackPanel Margin="25,40,0,0">
					<TextBlock Text="general" Style="{DynamicResource SettingPageTitle}" />

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Accent Theme:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Why not spice things up and make Assembly your own. So many colours!
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<ComboBox x:Name="ComboBoxAccents" HorizontalAlignment="Left" VerticalAlignment="Top"
								  SelectedItem="{Binding Path=ApplicationAccent, Mode=TwoWay}" Width="250" />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Easter Eggs:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Assembly has some tricks hidden away. You can opt-out if you are no fun.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<CheckBox VerticalAlignment="Top"
									  IsChecked="{Binding Path=ApplicationEasterEggs, Mode=TwoWay}"
									  Content="Enable easter eggs." />
						</Grid>
					</Grid>
					
					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Automatic Updates:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Keep up-to-date and have Assembly automatically check for updates every time you start it.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<CheckBox VerticalAlignment="Top"
									  IsChecked="{Binding Path=ApplicationUpdateOnStartup, Mode=TwoWay}"
									  Content="Check for updates on startup." />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Update Channel:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								<Run Text="Choose which channel you want to use for updates."/>
								<LineBreak/>
								<LineBreak/>
								<Run Text="Stable - Only receive updates that are known to work well (master branch)"/>
								<LineBreak/>
								<LineBreak/>
								<Run Text="Experimental - Recieve an update more frequently to match game updates. Possible bugs (dev branch)"/>
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<ComboBox x:Name="ComboBoxUpdateChannel" HorizontalAlignment="Left" VerticalAlignment="Top"
								  SelectedItem="{Binding Path=UpdateChannel, Mode=TwoWay}" Width="250" />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Default Editor:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Indicates what file types you would like to associate with Assembly.
							</TextBlock>
						</StackPanel>
						<StackPanel Grid.Column="2">
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
									  Content=".map files" IsChecked="{Binding Path=DefaultMap, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0"
									  Content=".blf files" IsChecked="{Binding Path=DefaultBlf, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0"
									  Content=".mapinfo files" IsChecked="{Binding Path=DefaultMif, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0"
									  Content=".campaign files" IsChecked="{Binding Path=DefaultCif, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0"
									  Content=".asmp files" IsChecked="{Binding Path=DefaultAmp, Mode=TwoWay}" />
						</StackPanel>
					</Grid>
				</StackPanel>
			</Grid>

			<Grid x:Name="Xbox360DevSettingsPanel" Visibility="Collapsed">
				<StackPanel Margin="25,40,0,0">
					<TextBlock Text="xbox development kits" Style="{DynamicResource SettingPageTitle}" />

					<TextBlock Style="{DynamicResource SettingDescription}">
						<Run>Support for Xbox consoles requires that some form of dev/debug kernel or equivalent is running on your console(s).</Run>
						<LineBreak/>
						<LineBreak/>
						<Run FontStyle="Italic">For Original Xbox, a debug-enabled xbe is recommended for poking Halo 1 as the retail xbe prevents xbdm/poking from working.</Run>
						<LineBreak/>
						<Run FontStyle="Italic">The xbe can be modified around this but it will break multiplayer. For more info on the xbe edit check the </Run>
						<Hyperlink FontStyle="Italic" NavigateUri="https://xboxdevwiki.net/Halo:_Combat_Evolved#Debugging" RequestNavigate="Hyperlink_RequestNavigate">Xbox Dev Wiki.</Hyperlink>
					</TextBlock>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Xbox 360 Name/IP:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								The Name or IP address of your Xbox 360 Development kit.
							</TextBlock>

						</StackPanel>
						<StackPanel Grid.Column="2" Orientation="Horizontal">
							<TextBox x:Name="xeConsoleTextbox" VerticalAlignment="Top" HorizontalAlignment="Left" Width="250" Text="{Binding Path=XeConsoleNameIp, Mode=TwoWay}" />
						</StackPanel>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Xbox Name/IP:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								The Name or IP address of your Xbox Development kit.
							</TextBlock>
						</StackPanel>
						<StackPanel Grid.Column="2" Orientation="Horizontal">
							<TextBox x:Name="xbConsoleTextbox" VerticalAlignment="Top" HorizontalAlignment="Left" Width="250" Text="{Binding Path=XbConsoleNameIp, Mode=TwoWay}" />
						</StackPanel>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Only Use 360 For Poking:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Will attempt to enable poking on Original Xbox maps that are running via Xbox 360 backcompat. (This will disable normal Original Xbox poking while active!)
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<CheckBox VerticalAlignment="Top"
							  IsChecked="{Binding Path=XdkOnly360, Mode=TwoWay}"
							  Content="&quot;I Don't Own An OG Xbox&quot;" />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Freeze Console During Screenshots:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Makes screenshots more crisp by preventing any movement onscreen.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<CheckBox VerticalAlignment="Top"
									  IsChecked="{Binding Path=XdkScreenshotFreeze, Mode=TwoWay}"
									  Content="Freeze Console" />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Gamma Correct Screenshots:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Applies custom gamma values to make Halo 3 and ODST screenshots more accurate. However this will also distort Halo Wars (and a handful of other games') screenshots if enabled. Toggle as needed. (This is ignored for most other games.)
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<CheckBox VerticalAlignment="Top"
									  IsChecked="{Binding Path=XdkScreenshotGammaCorrect, Mode=TwoWay}"
									  Content="Gamma Correct" />
						</Grid>
					</Grid>
					
					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Auto-Save Screenshots:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Screenshots will be automatically saved as PNG format to the specified folder.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<CheckBox VerticalAlignment="Top"
									  IsChecked="{Binding Path=XdkAutoSave, Mode=TwoWay}"
									  Content="Auto-Save" />

							<StackPanel Grid.Row="2" VerticalAlignment="Top" Margin="0,4,0,0" Orientation="Horizontal">
								<TextBox x:Name="TextBoxAutoSaveDirectory" Width="250" Text="{Binding Path=XdkScreenshotPath, Mode=TwoWay}" />
								<Button Margin="10,0,0,0" Width="75" Content="Browse..." Click="TextBoxAutoSaveDirectory_OnClick" />
							</StackPanel>
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Resize Screenshots:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								[360 Only] Resizes screenshots to your console's display resolution, as the game's internal resolution may be distorted in some cases.
								<LineBreak/>
								Examples of distortion include Halo 3, ODST, Reach, and running in a non-widescreen mode.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<CheckBox VerticalAlignment="Top"
									  IsChecked="{Binding Path=XdkResizeImages, Mode=TwoWay}"
									  Content="Resize Screenshots" />
						</Grid>
					</Grid>
				</StackPanel>
			</Grid>

			<Grid x:Name="MapEditSettingsPanel" Visibility="Collapsed">
				<StackPanel Margin="25,40,0,0">
					<TextBlock Text="map editor" Style="{DynamicResource SettingPageTitle}" />

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Info Panel Location:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Indicates the side of the screen the Map Info panel will appear when editing a blam cache file.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<ComboBox x:Name="ComboBoxMapInfoDockSide" HorizontalAlignment="Left" VerticalAlignment="Top"
									  SelectedItem="{Binding Path=HalomapMapInfoDockSide, Mode=TwoWay}" Width="250" />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Tag Sorting Method:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Indicates how the tag tree should be displayed, in the tradition halo modding style of tags inside groups, or the offical bungie way, in a hirarichy tree.
							</TextBlock>
						</StackPanel>
						<Grid Grid.Column="2">
							<ComboBox x:Name="ComboBoxMapTagSort" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False"
									  SelectedItem="{Binding Path=HalomapTagSort, Mode=TwoWay}" Width="250" />
						</Grid>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="xsd.exe Path:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								The path to the 'xsd' tool in the Xbox 360 SDK. This is used for shader decompiling. You probally don't need this.
							</TextBlock>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Grid.Column="2">
							<TextBox HorizontalAlignment="Left" Width="250" Text="{Binding XsdPath, Mode=TwoWay}" />
							<Button Margin="20,0,0,0" Width="75" HorizontalAlignment="Left" Click="BrowseXsdButton_OnClick">Browse...</Button>
						</StackPanel>
					</Grid>

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="30" />
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="44" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Text="game specific resource cache" Style="{DynamicResource SettingPageSubTitle}" />

						<StackPanel Grid.Row="1" Grid.Column="1">
							<TextBlock Text="Selected Game:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								The game the resource cache path below belongs to.
							</TextBlock>

							<TextBlock Text="Resource Cache Folder Path:" Style="{DynamicResource SettingName}" Margin="0,30,0,0" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								The directory resource cache's (ie; mainmenu, shared) for the selected game are stored in.
							</TextBlock>
						</StackPanel>
						<StackPanel Grid.Row="1" Grid.Column="3" Orientation="Vertical">
							<ComboBox x:Name="ComboBoxGameBuilds" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,4,0,0"
									  Width="250" ItemsSource="{Binding Path=HalomapResourceCachePaths, Mode=TwoWay}" SelectedIndex="0">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding EngineName}"/>
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>
							<TextBox Margin="0,49,0,0" HorizontalAlignment="Left" Width="250" Text="{Binding Path=SelectedItem.ResourceCachePath, ElementName=ComboBoxGameBuilds, Mode=TwoWay}" />
						</StackPanel>
					</Grid>
				</StackPanel>
			</Grid>

			<Grid x:Name="StartPageSettingsPanel" Visibility="Collapsed">
				<StackPanel Margin="25,40,0,0">
					<TextBlock Text="start page" Style="{DynamicResource SettingPageTitle}" />

					<Grid Style="{DynamicResource SettingEntry}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel Grid.Column="0">
							<TextBlock Text="Recents to show:" Style="{DynamicResource SettingName}" />
							<TextBlock TextWrapping="Wrap" Style="{DynamicResource SettingDescription}">
								Indicates what recent file types you would like to be displayed on the start page.
							</TextBlock>
						</StackPanel>
						<StackPanel Grid.Column="2">
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
									  Content=".map files" 
									  IsChecked="{Binding Path=StartpageShowRecentsMap, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
									  Margin="0,4,0,0" Content=".blf files" 
									  IsChecked="{Binding Path=StartpageShowRecentsBlf, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
									  Margin="0,4,0,0" Content=".mapinfo files"
									  IsChecked="{Binding Path=StartpageShowRecentsMapInfo, Mode=TwoWay}" />
							<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
									  Margin="0,4,0,0" Content=".campaign files"
									  IsChecked="{Binding Path=StartpageShowRecentsCampaign, Mode=TwoWay}" />
						</StackPanel>
					</Grid>
				</StackPanel>
			</Grid>
		</Grid>

		<StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Column="1" Orientation="Vertical"
					Margin="0,0,5,5">
			<TextBlock HorizontalAlignment="Right" Text="Where is my save button?"
					   FontFamily="{DynamicResource MetroFontSemiBold}">
				<TextBlock.Foreground>
					<SolidColorBrush Color="{DynamicResource ExtryzeAccentBrushColour}" />
				</TextBlock.Foreground>
			</TextBlock>
			<TextBlock Text="Just change your settings, they get saved as you edit them."
					   FontFamily="{DynamicResource MetroFontRegular}" Foreground="White" />
		</StackPanel>
	</Grid>
</UserControl>