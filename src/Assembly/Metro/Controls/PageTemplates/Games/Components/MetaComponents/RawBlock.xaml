<UserControl x:Class="Assembly.Metro.Controls.PageTemplates.Games.Components.MetaComponents.RawBlock"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:local="clr-namespace:Assembly.Metro.Controls.PageTemplates.Games.Components.MetaComponents"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:c="clr-namespace:Assembly.Metro.Controls.PageTemplates.Games.Components"
			 mc:Ignorable="d" x:Name="rawBlock" Height="164" Width="606"
			 HorizontalAlignment="Left">
	<UserControl.Resources>
		<local:CustomBooleanToVisibilityConverter x:Key="cb2v" />
	</UserControl.Resources>
	<UserControl.CommandBindings>
		<CommandBinding Command="{x:Static local:RawBlock.AllocateCommand}"
                        CanExecute="AllocateCommand_CanExecute" />
		<CommandBinding Command="{x:Static local:RawBlock.IsolateCommand}"
                        CanExecute="IsolateCommand_CanExecute" />
	</UserControl.CommandBindings>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="200"/>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<DockPanel Grid.Column="0" Background="Transparent" Height="28" VerticalAlignment="Top">
			<DockPanel.ToolTip>
				<StackPanel MaxWidth="500">
					<TextBlock Text="{Binding Name}" TextWrapping="WrapWithOverflow" FontWeight="Bold" />
					<TextBlock Text="{Binding Offset, StringFormat='Field Offset: 0x{0:X}'}" Foreground="#CCC" />
					<TextBlock Text="{Binding FieldAddress, StringFormat='Address: 0x{0:X}'}" Foreground="#CCC" />
					<TextBlock Text="{Binding PluginLine, StringFormat='Plugin Line: {0}'}" Foreground="#CCC" />
					<TextBlock Text="{Binding ToolTip}" TextWrapping="WrapWithOverflow" 
							   Visibility="{Binding ToolTipExists, Converter={StaticResource cb2v}, ConverterParameter={x:Static Visibility.Collapsed}}" />
				</StackPanel>
			</DockPanel.ToolTip>
			<TextBlock Text="?" Foreground="{DynamicResource ExtryzeAccentBrush}" FontSize="12" FontWeight="Bold" Margin="0,0,2,0"
					   VerticalAlignment="Center" FontFamily="{DynamicResource MetroFontRegular}" Visibility="{Binding ToolTipExists, Converter={StaticResource cb2v}}" />
			<TextBlock x:Name="lblValueName" Text="{Binding Path=Name}"
			           Style="{DynamicResource GenericTextblock}" VerticalAlignment="Center"
			           TextTrimming="CharacterEllipsis" />
		</DockPanel>
		<Grid Grid.Column="1" Margin="0,0,4,0">
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<TextBox Text="{Binding Value}" x:Name="txtValue" MaxLength="{Binding MaxLength}" Margin="0,3,0,5"
								   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
								   FontFamily="Consolas" FontSize="12" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" Height="Auto">
				<TextBox.Style>
					<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
						<Setter Property="IsReadOnly" Value="False" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding ShowingNotice}" Value="True">
								<Setter Property="IsReadOnly" Value="True"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBox.Style>
			</TextBox>

			<Grid Grid.Row="1" Margin="0,0,0,3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="90"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="90"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Row="1" Grid.Column="0" Margin="10,0,0,0" Text="{Binding FullType}" Style="{DynamicResource GenericTextblock}" VerticalAlignment="Center"
					   TextTrimming="CharacterEllipsis" />
				<TextBlock Grid.Row="1" Grid.Column="1" Text="Length:" Style="{DynamicResource GenericTextblock}" VerticalAlignment="Center"
					   HorizontalAlignment="Left" Margin="0,0,4,0" TextTrimming="CharacterEllipsis" />
				<TextBox Grid.Row="1" Grid.Column="2" Foreground="#FF999999"
					 Text="{Binding Length, UpdateSourceTrigger=LostFocus}"
					 c:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
					<TextBox.ToolTip>
						<TextBlock>
							<Run Text="Warning: Manually changing this value may cause corruption of adjacent data." />
							<LineBreak/>
							<Run Text="Use the Allocator tool if you aren't sure what you are doing!" />
						</TextBlock>
					</TextBox.ToolTip>
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
							<Setter Property="IsReadOnly" Value="True"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Type}" Value="dataref">
									<Setter Property="IsReadOnly" Value="False"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding ShowingNotice}" Value="True">
									<Setter Property="IsReadOnly" Value="True"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>
				<TextBlock Grid.Row="1" Grid.Column="3" Text="Address:" Style="{DynamicResource GenericTextblock}" VerticalAlignment="Center"
					   HorizontalAlignment="Left" Margin="8,0,4,0" TextTrimming="CharacterEllipsis" />
				<TextBox Grid.Row="1" Grid.Column="4" Foreground="#FF999999"
					 Text="{Binding DataAddressHex, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"
					 c:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
							<Setter Property="IsReadOnly" Value="True"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Type}" Value="dataref">
									<Setter Property="IsReadOnly" Value="False"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>

				<ToggleButton Grid.Row="1" Grid.Column="5" x:Name="btnOptions" VerticalAlignment="Center" Margin="5,0,0,0" IsChecked="False" ToolTip="Click to view options relating to this field.">
					<Path VerticalAlignment="Center" Margin="2" Fill="#989898" Style="{StaticResource GearIcon}" />
					<ToggleButton.Style>
						<Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
							<Setter Property="IsEnabled" Value="False"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Type}" Value="dataref">
									<Setter Property="IsEnabled" Value="True"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ToggleButton.Style>
				</ToggleButton>
				<Popup x:Name="popOptions" IsOpen="{Binding IsChecked, ElementName=btnOptions}" PlacementTarget="{x:Reference btnOptions}" StaysOpen="False" >
					<Border BorderThickness="1" Background="#1b1b1c" BorderBrush="#333337">
						<StackPanel>
							<MenuItem Header="Allocate Data" Foreground="White" ToolTip="Opens the Data Reference Allocator tool to properly increase or decrease the length of this data. (Original data will not be copied.)"
								 Command="{x:Static local:RawBlock.AllocateCommand}" CommandTarget="{Binding ElementName=rawBlock}"/>
							<MenuItem Header="Isolate Shared Data Reference" Foreground="White" ToolTip="Copy this dataref to a new address, isolating it from any shared instances."
								 Command="{x:Static local:RawBlock.IsolateCommand}" CommandTarget="{Binding ElementName=rawBlock}"/>
						</StackPanel>
					</Border>
				</Popup>
			</Grid>

			<Border x:Name="bigData" Margin="-2,1,-2,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto"
					Background="#C0292929" Grid.RowSpan="2" BorderBrush="#C0252525" BorderThickness="1">
				<Border.Style>
					<Style TargetType="{x:Type Border}">
						<Setter Property="Visibility" Value="Visible" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding ShowingNotice}" Value="True">
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowingNotice}" Value="False">
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>

				<StackPanel HorizontalAlignment="Center" Margin="0,30,0,0">
					<TextBlock TextWrapping="Wrap" Foreground="White" TextAlignment="Center">
						<Run>This field contains a lot of data which can cause lag. You must manually choose to load it.</Run>
						<LineBreak/>
						<Run>This feature can be disabled in the settings below via the gear icon.</Run>
					</TextBlock>
					<Button Content="Load Data" Margin="0,4,0,0" Click="NoticeHide_Click"/>
				</StackPanel>

			</Border>
		</Grid>
	</Grid>
</UserControl>