<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:n="clr-namespace:Assembly.Helpers.Native"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Class="Assembly.Metro.Dialogs.ControlDialogs.InjectSettings"
	xmlns:Vectors="clr-namespace:Assembly.Metro.Controls.Vectors"
	xmlns:local="clr-namespace:Assembly.Metro.Dialogs.ControlDialogs"
	AllowsTransparency="True" ResizeMode="CanResize" WindowStyle="None" WindowStartupLocation="CenterScreen"
	SnapsToDevicePixels="True" Title="Import Options" Height="464" Width="664"
	MaxWidth="550" MinHeight="464" MinWidth="664" ShowInTaskbar="True"
	n:WindowMovement.IsDraggable="True" x:Name="control">
	<Window.Resources>
		<local:ExistingTagConverter x:Key="tagToBoolConverter" TagsSource="{Binding Tags, Source={x:Reference control}}" />
	</Window.Resources>
	<Border Background="#FF2E2E31" BorderThickness="1,1,1,23" BorderBrush="{DynamicResource ExtryzeAccentBrush}">
		<Grid>
			<Grid Margin="0,0,0,5">
				<Grid.RowDefinitions>
					<RowDefinition Height="60px" />
					<RowDefinition Height="*" />
					<RowDefinition Height="36px" />
				</Grid.RowDefinitions>
				<Path Style="{StaticResource AsmLogo}" Margin="6,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="34" Width="34" />
				<TextBlock Grid.Row="0" x:Name="lblTitle" Text="Import Options" Foreground="#989898" VerticalAlignment="Top"
					   HorizontalAlignment="Stretch" FontSize="15" Margin="45,12,141,0"
					   FontFamily="{DynamicResource MetroFontLight}" TextTrimming="CharacterEllipsis" />

				<Grid
				Grid.Row="0"
				x:Name="headerThumb"
				Opacity="0"
				Background="Transparent"
				Margin="0,0,0,0" Height="53.5" VerticalAlignment="Top"
				n:WindowMovement.DragsWindow="True" />

				<Grid Grid.Row="1">
					<TabControl Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Margin="0">
						<TabItem Header="Options" Style="{StaticResource MetroHeaderTabItem}" Height="16" VerticalAlignment="Bottom" Margin="33,0,-33,0">

							<StackPanel Margin="15,15,15,0">
								<TextBlock TextWrapping="Wrap" Margin="0,0,0,4" Style="{StaticResource GenericTextblock}" Text="Note: The defaults here will apply to a majority of cases, only change if you know what you are doing!" />

								<CheckBox x:Name="keepsnd" Content="Keep Sound Tags" Margin="0,8,0,0" Visibility="Collapsed" />
								<TextBlock Margin="32,0,0,0" TextWrapping="Wrap" Style="{StaticResource GenericTextblock}" FontSize="10" Text="Sounds do not properly inject in games prior to Halo 4, so they are removed to prevent crashes. Enabling will inject sound tags anyway. Do not enable outside of Halo 4 unless following a custom sound tutorial." Visibility="Collapsed" />

								<CheckBox x:Name="findraw" Content="Use Existing/Shared Raw Pages" Margin="0,8,0,0" IsChecked="True"/>
								<TextBlock Margin="32,0,0,0" TextWrapping="Wrap" Style="{StaticResource GenericTextblock}" FontSize="10" Text="Attempts to reduce map filesize and memory usage ingame by keeping shared resources shared and reusing pages that already exist. Only disable if you plan on adding a custom bitmap or other resource." />

								<CheckBox x:Name="injectraw" Content="Inject Raw Data" Margin="0,8,0,0" IsChecked="True"/>
								<TextBlock Margin="32,0,0,0" TextWrapping="Wrap" Style="{StaticResource GenericTextblock}" FontSize="10" Text="Raw data for tags will also be injected. This replaces the &quot;Extract With/Without Raw&quot; options of previous versions. Only disable if you plan on adding a custom bitmap or other resource. This will NOT override &quot;Use Existing/Shared&quot;!" />

								<CheckBox x:Name="uniqueshaders" Content="Unique Shaders" Margin="0,8,0,0" />
								<TextBlock Margin="32,0,0,0" TextWrapping="Wrap" Style="{StaticResource GenericTextblock}" FontSize="10" Text="In games past Halo 3/ODST, tags containing shader code can differ between maps due to stripping of unused data. This will rename affected tags so necessary tags always get injected. Disable at your own discretion, when on by default." />

								<CheckBox x:Name="addprediction" Content="Add Prediction Data" Margin="0,8,0,0" IsChecked="True"/>
								<TextBlock Margin="32,0,0,0" TextWrapping="Wrap" Style="{StaticResource GenericTextblock}" FontSize="10" Text="Assembly will include prediction data on injected objects, increasing visual quality if the game is able. Data is tied to object tags (biped, etc) and will only be included if those are injected." />

							</StackPanel>
						</TabItem>
						<TabItem Header="Tags" Style="{StaticResource MetroHeaderTabItem}" Height="16" VerticalAlignment="Bottom" Margin="33,0,-33,0">
							<Grid Margin="15,15,15,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>

								<Grid Grid.Row="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0" TextWrapping="Wrap" Style="{StaticResource GenericTextblock}" Text="Use this to rename any tag(s) to be injected via double-clicking. Tags without a plus icon won't be injected unless renamed, instead using the existing tag of the same name from this map."/>
									<ComboBox x:Name="tagClasses" Width="65" Margin="4,0,1,0" Grid.Column="1" SelectionChanged="tagClasses_SelectionChanged" VerticalAlignment="Bottom">
										<ComboBox.ItemTemplate>
											<ItemContainerTemplate>
												<TextBlock Text="{Binding Path=MagicString}" />
											</ItemContainerTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>

								</Grid>

								<Grid Grid.Row="2" Margin="-1,2,-1,-1">
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									
									<ListBox x:Name="listTags"  Background="Transparent" MouseDoubleClick="listTags_MouseDoubleClick" Grid.Row="0">
										<ListBox.ItemTemplate>
											<ItemContainerTemplate>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="13" />
														<ColumnDefinition Width="*" />
													</Grid.ColumnDefinitions>
													<Path x:Name="CheckMark" Grid.Column="0" SnapsToDevicePixels="False" VerticalAlignment="Center" >
														<Path.Style>
															<Style TargetType="Path">
																<Setter Property="Stroke" Value="{DynamicResource ExtryzeAccentBrushSecondary}" />
																<Setter Property="StrokeThickness" Value="1.5" />
																<Setter Property="Data" Value="M 4.5 0 L 4.5 9 M 0 4.5 L 9 4.5" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ., Mode=TwoWay, Converter={StaticResource tagToBoolConverter}}" Value="True">
																		<Setter Property="Visibility" Value="Hidden" />
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</Path.Style>
													</Path>
													<TextBlock Grid.Column="1" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"
															   ToolTip="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}">
														<TextBlock.Style>
															<Style TargetType="TextBlock" BasedOn="{StaticResource GenericTextblock}">
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ., Mode=TwoWay, Converter={StaticResource tagToBoolConverter}}" Value="False">
																		<Setter Property="Foreground" Value="White" />
																	</DataTrigger>
																</Style.Triggers>
																
															</Style>
														</TextBlock.Style>
													</TextBlock>
												</Grid>
												
											</ItemContainerTemplate>
										</ListBox.ItemTemplate>
									</ListBox>

									<Expander Header="Replace" Grid.Row="1" Margin="2,1,2,0" Padding="1" ExpandDirection="Up">
										<Grid Background="#333337" Margin="-1,0,-1,-1">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<TextBlock Text="Find What:" Grid.Row="0" Margin="4,0,0,0" VerticalAlignment="Center" />
											<TextBlock Text="Replace With:" Grid.Row="1" Margin="4,0,0,0" VerticalAlignment="Center"/>

											<TextBox x:Name="massRenameFind" Grid.Row="0" Grid.Column="1" Margin="4"/>
											<TextBox x:Name="massRenameReplace" Grid.Row="1" Grid.Column="1" Margin="4"/>

											<StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1"  Margin="4" HorizontalAlignment="Right">
												<TextBlock Text="(Case Sensitive)" Margin="0,0,8,0" VerticalAlignment="Center" />
												<CheckBox x:Name="renameClassOnly" Content="Current Class Only" VerticalAlignment="Center" />
												<Button Content="Replace All" Width="120" Margin="4,0,0,0" Click="MassRename_Click"/>
											</StackPanel>

										</Grid>

									</Expander>
									
								</Grid>

							</Grid>
							
						</TabItem>
					</TabControl>

				</Grid>
			</Grid>
			<Grid Margin="-1, -1, -1, -23">
				<!--Resize-->
				<Vectors:ResizeModule x:Name="ResizeDropVector" VerticalAlignment="Bottom" HorizontalAlignment="Right"
				                      Margin="0,0,5,5" Cursor="SizeNWSE" />
				<Thumb x:Name="ResizeDrop" DragDelta="ResizeDrop_DragDelta" Opacity="0" Background="{x:Null}" Foreground="{x:Null}"
				       Width="11" Height="11" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,1,1"
				       Cursor="SizeNWSE" />
			</Grid>

			<StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,20,5"
						VerticalAlignment="Bottom">
				<Button x:Name="btnOK" Padding="10,0,10,0" Margin="10,0,10,0" Click="btnOK_Click" Content="Inject"/>
				<Button x:Name="btnCancel" Padding="10,0,10,0" Margin="0" Click="btnCancel_Click" Content="Cancel"/>
			</StackPanel>

		</Grid>
	</Border>
</Window>