<UserControl x:Class="Atlas.Views.Cache.TagEditor"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:behavior="clr-namespace:Atlas.Metro.Controls.Behavior"
			 xmlns:local="clr-namespace:Atlas.Views.Cache"
			 mc:Ignorable="d" 
			 Background="#252526"
			 d:DesignHeight="600" d:DesignWidth="900">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="TagEditorComponents/ComponentDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition x:Name="TagEditorRowDefinition" Height="{Binding Path=TagEditorGridLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0.7*}" />
			<RowDefinition Height="5" />
			<RowDefinition x:Name="PluginEditorRowDefinition" Height="{Binding Path=TagEditorPluginGridLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0.3*}" />
			<RowDefinition Height="5" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="18" />
		</Grid.ColumnDefinitions>

		<Grid x:Name="TagEditorGrid" Grid.Column="0">
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition Height="17px" />
			</Grid.RowDefinitions>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="2px" />
					<ColumnDefinition MinWidth="240px" Width="240px" />
				</Grid.ColumnDefinitions>
				<ListBox Name="TagDataViewer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" Grid.Column="0" Grid.ColumnSpan="3"
							VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
							ScrollViewer.CanContentScroll="True" SelectionChanged="TagDataViewer_OnSelectionChanged"
							Padding="0,7,0,7">
					<ListBox.LayoutTransform>
						<ScaleTransform ScaleX="{Binding Path=SelectedItem.Tag, Converter={StaticResource IValueConverterPercentileToDecimal}, ElementName=TagEditorZoomSelectorComboBox}" 
							ScaleY="{Binding Path=SelectedItem.Tag, Converter={StaticResource IValueConverterPercentileToDecimal}, ElementName=TagEditorZoomSelectorComboBox}" />
					</ListBox.LayoutTransform>
					<ListBox.Template>
						<ControlTemplate>
							<ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
								<ItemsPresenter />
							</ScrollViewer>
						</ControlTemplate>
					</ListBox.Template>
					<ListBox.ItemContainerStyle>
						<Style TargetType="{x:Type ListBoxItem}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate>
										<Grid Background="{TemplateBinding ListBoxItem.Background}">
											<ContentPresenter Name="PART_Content"
														Content="{TemplateBinding ContentControl.Content}"
														Margin="20,0,20,0"
														ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
														ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
														HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
														VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
														SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
											<Grid.ContextMenu>
												<ContextMenu Name="metaFieldMenu">
													<ContextMenu.CommandBindings>
														<CommandBinding Command="{x:Static local:TagEditor.ViewValueAsCommand}"
																CanExecute="ViewValueAsCommand_CanExecute"
																Executed="ViewValueAsCommand_Executed" />

														<CommandBinding Command="{x:Static local:TagEditor.GoToPluginCommand}"
																CanExecute="GoToPlugin_CanExecute"
																Executed="GoToPlugin_Executed" />
													</ContextMenu.CommandBindings>
													<MenuItem Header="View Value As..." Foreground="White"
																  Command="{x:Static local:TagEditor.ViewValueAsCommand}" 
																  CommandParameter="{Binding}" />

													<MenuItem Header="Go to plugin line..." Foreground="White" 
																  Command="{x:Static local:TagEditor.GoToPluginCommand}"
																  CommandParameter="{Binding}" />
												</ContextMenu>
											</Grid.ContextMenu>
										</Grid>
										<ControlTemplate.Triggers>
											<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
												<Setter Property="Background" Value="#FF181818" />
											</DataTrigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.ItemContainerStyle>
				</ListBox>

				<GridSplitter Grid.Column="1" Height="66" ResizeDirection="Columns" Margin="0,0,0,0"
									VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="Transparent" />

				<Border x:Name="SearchBoxBorder" Grid.Column="2" VerticalAlignment="Top" Visibility="Collapsed"
							HorizontalAlignment="Stretch" BorderThickness="0,0,0,4" Margin="0,0,18,0"
							BorderBrush="{DynamicResource AssemblyAccentBrush}" Background="#2d2d30">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="35" />
							<RowDefinition Height="25" />
							<RowDefinition Height="6" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="30" />
						</Grid.ColumnDefinitions>

						<TextBox x:Name="SearchQueryTextBox" Text="{Binding Path=SearchQuery, UpdateSourceTrigger=PropertyChanged, FallbackValue='Search Query'}" 
										Grid.Column="1" Margin="0,2,0,0" IsEnabled="{Binding Path=PluginExists}" KeyUp="SearchQueryTextBox_OnKeyUp" />
						<Button x:Name="DataSearchResetButton" Margin="0,2,0,0" Grid.Column="2" Grid.Row="0" Click="DataSearchResetButton_Click">
							<Button.Style>
								<Style TargetType="{x:Type Button}">
									<Setter Property="Background" Value="Transparent" />
									<Setter Property="Foreground" Value="#999999" />
									<Setter Property="Height" Value="18" />
									<Setter Property="Width" Value="18" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Button}">
												<Grid x:Name="ContainerGrid" Background="{TemplateBinding Background}">
													<Path x:Name="CrossPath" Stroke="{TemplateBinding Foreground}" 
																StrokeThickness="1.5" SnapsToDevicePixels="True"
																VerticalAlignment="Center" HorizontalAlignment="Center"
																Data="M0,0 L8,7 M0,7 L8,0" />
												</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Background" TargetName="ContainerGrid" Value="#3e3e40" />
														<Setter Property="Stroke" TargetName="CrossPath" Value="{DynamicResource AssemblyAccentBrush}" />
													</Trigger>

													<Trigger Property="IsPressed" Value="True">
														<Setter Property="Background" TargetName="ContainerGrid" Value="{DynamicResource AssemblyAccentBrush}" />
														<Setter Property="Stroke" TargetName="CrossPath" Value="White" />
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Button.Style>
						</Button>

						<Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="4" />
							</Grid.ColumnDefinitions>

							<ComboBox Name="DataSearchResultsComboBox" Grid.Column="0" Margin="0,0,5,0" IsEnabled="{Binding Path=SearchResults.Count, Converter={StaticResource IValueConverterIntegerToBoolean}}" 
											ItemsSource="{Binding Path=SearchResults}" SelectedItem="{Binding Path=SelectedSearchResult}" 
											SelectionChanged="DataSearchResultsComboBox_SelectionChanged">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Field.Name}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>

							<Button Grid.Column="1" IsEnabled="{Binding Path=SearchResults.Count, Converter={StaticResource IValueConverterIntegerToBoolean}}"
										Click="PreviousSearchTagDataButton_Click">
								<Button.Style>
									<Style TargetType="{x:Type Button}">
										<Setter Property="Background" Value="Transparent" />
										<Setter Property="Foreground" Value="#999999" />
										<Setter Property="Height" Value="18" />
										<Setter Property="Width" Value="18" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Button}">
													<Grid x:Name="ContainerGrid" Background="{TemplateBinding Background}">
														<Path x:Name="Path" Stroke="{TemplateBinding Foreground}" 
																StrokeThickness="1.5" SnapsToDevicePixels="False"
																VerticalAlignment="Center" HorizontalAlignment="Center"
																Data="M 2,0 L 0,2 2,4 Z" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="ContainerGrid" Value="#3e3e40" />
															<Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AssemblyAccentBrush}" />
														</Trigger>

														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" TargetName="ContainerGrid" Value="{DynamicResource AssemblyAccentBrush}" />
															<Setter Property="Stroke" TargetName="Path" Value="White" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Button.Style>
							</Button>

							<Button Grid.Column="2" IsEnabled="{Binding Path=SearchResults.Count, Converter={StaticResource IValueConverterIntegerToBoolean}}"
										Click="NextSearchTagDataButton_Click">
								<Button.Style>
									<Style TargetType="{x:Type Button}">
										<Setter Property="Background" Value="Transparent" />
										<Setter Property="Foreground" Value="#999999" />
										<Setter Property="Height" Value="18" />
										<Setter Property="Width" Value="18" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Button}">
													<Grid x:Name="ContainerGrid" Background="{TemplateBinding Background}">
														<Path x:Name="Path" Stroke="{TemplateBinding Foreground}" 
																StrokeThickness="1.5" SnapsToDevicePixels="False"
																VerticalAlignment="Center" HorizontalAlignment="Center"
																Data="M 0,0 L 2,2 0,4 Z" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="ContainerGrid" Value="#3e3e40" />
															<Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AssemblyAccentBrush}" />
														</Trigger>

														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" TargetName="ContainerGrid" Value="{DynamicResource AssemblyAccentBrush}" />
															<Setter Property="Stroke" TargetName="Path" Value="White" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Button.Style>
							</Button>
						</Grid>

						<Path Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" SnapsToDevicePixels="True" Fill="#999999" 
									Margin="4,0,0,4" VerticalAlignment="Bottom"
									Data="M 0,0 L 0,1 1,1 1,0 Z
										M 0,3 L 1,3 1,4 0,4 Z
										M 0,6 L 1,6 1,7 0,7 Z
										M 3,3 L 4,3 4,4 3,4 Z
										M 3,6 L 4,6 4,7 3,7 Z
										M 6,6 L 7,6 7,7 6,7 Z" />
					</Grid>
				</Border>
			</Grid>

			<Grid Grid.Row="1" Background="#2d2d30">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="65px" />
						<ColumnDefinition Width="23px" />
						<ColumnDefinition Width="23px" />
						<ColumnDefinition Width="23px" />
						<ColumnDefinition Width="23px" />
						<ColumnDefinition Width="23px" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.Resources>
						<ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="EditorComboBoxToggleButtonTemplate">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="16" />
								</Grid.ColumnDefinitions>
								<Border BorderBrush="#434346" CornerRadius="0" BorderThickness="1"
										Name="Border" Background="#333337" Grid.ColumnSpan="2" />
								<Border Margin="1,1,1,1" Name="TargetBorder" BorderBrush="Transparent"
										CornerRadius="0" BorderThickness="0,0,1,0" Background="#333337" Grid.Column="0" />
								<Path Margin="0,0,3,0" Data="M0,0L4,4 8,0z" HorizontalAlignment="Center"
										Fill="#989898" Name="Arrow" VerticalAlignment="Center" Width="8"
										Grid.Column="1" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="UIElement.IsMouseOver" Value="True">
									<Setter Property="Background" TargetName="Border" Value="#1f1f20" />
									<Setter Property="Background" TargetName="TargetBorder" Value="#3f3f46" />
									<Setter Property="BorderBrush" TargetName="TargetBorder" Value="{DynamicResource AssemblyAccentBrush}" />
									<Setter Property="Fill" TargetName="Arrow" Value="White" />
								</Trigger>

								<Trigger Property="ToggleButton.IsChecked" Value="True">
									<Setter Property="Background" TargetName="Border" Value="#1f1f20" />
									<Setter Property="Background" TargetName="TargetBorder" Value="#3f3f46" />
									<Setter Property="BorderBrush" TargetName="TargetBorder" Value="{DynamicResource AssemblyAccentBrush}" />
									<Setter Property="Fill" TargetName="Arrow" Value="White" />
								</Trigger>
								<Trigger Property="UIElement.IsEnabled" Value="False">
									<Setter Property="Panel.Background" TargetName="Border" Value="#FF555558" />
									<Setter Property="Border.BorderBrush" TargetName="Border" Value="#FF555558" />
									<Setter Property="TextElement.Foreground" Value="#FFc4c4c4" />
									<Setter Property="Shape.Fill" TargetName="Arrow" Value="#66FFFFFF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>

						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Background" Value="#252526" />
							<Setter Property="BorderBrush" Value="#252526" />
							<Setter Property="BorderThickness" Value="1" />
							<Setter Property="Width" Value="22px" />
							<Setter Property="Height" Value="17px" />
							<Setter Property="Padding" Value="0" />
							<Setter Property="Margin" Value="1,0,0,0" />
							<Setter Property="HorizontalContentAlignment" Value="Center"/>
							<Setter Property="VerticalContentAlignment" Value="Center"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
											<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
																Content="{TemplateBinding Content}" 
																ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
																HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																RecognizesAccessKey="True" 
																SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
																VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Border>
										<ControlTemplate.Triggers>
											<!-- Mouse Over // Not Checked -->
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsMouseOver" Value="true" SourceName="border" />
													<Condition Property="IsPressed" Value="false" />
													<Condition Property="IsEnabled" Value="true" />
													<Condition Property="IsChecked" Value="false" />
												</MultiTrigger.Conditions>
												<Setter Property="Background" Value="#3e3e42" TargetName="border" />
												<Setter Property="BorderBrush" Value="#3e3e42" TargetName="border" />
											</MultiTrigger>

											<!-- Checked Button -->
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsChecked" Value="true" />
													<Condition Property="IsEnabled" Value="true" />
												</MultiTrigger.Conditions>
												<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrush}" TargetName="border" />
											</MultiTrigger>

											<!-- Disabled -->
											<Trigger Property="IsEnabled" Value="false">
												<Setter Property="Background" Value="#FF575757" TargetName="border" />
												<Setter Property="BorderBrush" Value="#FF8B8B8B" TargetName="border" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Background" Value="#252526" />
							<Setter Property="BorderBrush" Value="#252526" />
							<Setter Property="BorderThickness" Value="1" />
							<Setter Property="Width" Value="22px" />
							<Setter Property="Height" Value="17px" />
							<Setter Property="Padding" Value="0" />
							<Setter Property="Margin" Value="1,0,0,0" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							<Setter Property="VerticalContentAlignment" Value="Stretch"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
												BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
												Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
											<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
																Content="{TemplateBinding Content}" 
																ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
																HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																RecognizesAccessKey="True" 
																SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
																VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Border>
										<ControlTemplate.Triggers>
											<!-- Mouse Over // Not Pressed -->
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsMouseOver" Value="true" SourceName="border" />
													<Condition Property="IsPressed" Value="false" />
												</MultiTrigger.Conditions>
												<Setter Property="Background" Value="#3e3e42" TargetName="border" />
												<Setter Property="BorderBrush" Value="#3e3e42" TargetName="border" />
											</MultiTrigger>

											<!-- Pressed -->
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsPressed" Value="true" />
												</MultiTrigger.Conditions>
												<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrush}" TargetName="border" />
											</MultiTrigger>

											<!-- Disabled -->
											<Trigger Property="IsEnabled" Value="false">
												<Setter Property="Background" Value="#FF575757" TargetName="border" />
												<Setter Property="BorderBrush" Value="#FF8B8B8B" TargetName="border" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						<Style TargetType="{x:Type ComboBox}">
							<Setter Property="SnapsToDevicePixels" Value="True" />
							<Setter Property="OverridesDefaultStyle" Value="True" />
							<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
							<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
							<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
							<Setter Property="TextElement.Foreground" Value="{StaticResource NormalForegroundBrush}" />
							<Setter Property="FocusVisualStyle" Value="{x:Null}" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="FontSize" Value="12" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ComboBox">
										<Grid>
											<ToggleButton ClickMode="Press" Name="ToggleButton" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
												Focusable="False" Template="{StaticResource EditorComboBoxToggleButtonTemplate}" Margin="0" Width="Auto" />
											<Grid VerticalAlignment="Center">
												<ContentPresenter Margin="5,0,23,0" HorizontalAlignment="Left"
																	Name="ContentSite" VerticalAlignment="Center"
																	ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
																	ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
																	Content="{TemplateBinding ComboBox.SelectionBoxItem}" TextElement.FontSize="11"
																	IsHitTestVisible="False" />
											</Grid>
											<TextBox Margin="3,3,23,3" Visibility="Hidden" HorizontalAlignment="Left"
														Name="PART_EditableTextBox" Background="Transparent" VerticalAlignment="Center"
														Style="{x:Null}" IsReadOnly="False" Focusable="True" xml:space="preserve"
														Template="{StaticResource ComboBoxTextBoxTemplate}" />
											<Popup Placement="Bottom" Name="Popup" Focusable="False" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
													PopupAnimation="Slide">
												<Grid MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
														MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
														Name="DropDown" SnapsToDevicePixels="True">
													<Border BorderBrush="#323236" BorderThickness="1,1,1,1" 
															Name="DropDownBorder" Background="#1b1b1c" />
													<ScrollViewer Name="DropDownScrollViewer" Margin="4,6,4,6"
																	SnapsToDevicePixels="True">
														<ItemsPresenter Name="ItemsPresenter"
																		KeyboardNavigation.DirectionalNavigation="Contained" />
													</ScrollViewer>
												</Grid>
											</Popup>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="ItemsControl.HasItems" Value="False">
												<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
											</Trigger>
											<Trigger Property="UIElement.IsEnabled" Value="False">
												<Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
											</Trigger>
											<Trigger Property="ItemsControl.IsGrouping" Value="True">
												<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
											</Trigger>
											<Trigger Property="ComboBox.IsEditable" Value="True">
												<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
												<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
												<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Grid.Resources>
					<ComboBox x:Name="TagEditorZoomSelectorComboBox" SelectedIndex="6" Width="62" Margin="0,0,3,0">
						<ComboBoxItem Tag="20" Content="20%" />
						<ComboBoxItem Tag="35" Content="35%" />
						<ComboBoxItem Tag="50" Content="50%" />
						<ComboBoxItem Tag="65" Content="65%" />
						<ComboBoxItem Tag="70" Content="70%" />
						<ComboBoxItem Tag="85" Content="85%" />
						<ComboBoxItem Tag="100" Content="100%" />
					</ComboBox>
					<ToggleButton x:Name="ShowInvisiblesToggleButton" Grid.Column="1" ToolTip="Toggle the visibility unknown (unmapped) values in the Tag Editor"
								  IsChecked="{Binding Path=TagEditorShowInvisibles}" Checked="PluginOptionToggleButton_OnChanged" Unchecked="PluginOptionToggleButton_OnChanged">
						<ToggleButton.Content>
							<Grid Width="20" Height="15">
								<Path Fill="#c5c5c5" SnapsToDevicePixels="True" 
										Data="M 3,3 L 7,3 7,7 3,7 Z
											M 8,3 L 12,3 12,7 8,7 Z
											M 13,3 L 17,3 17,7 13,7 Z
											M 3,8 L 3,12 7,12 7,8 Z
											M 8,8 L 12,8 12,12 8,12 Z
											M 13,8 L 17,8 17,12 13,12 Z" />


								<Path Fill="#252526" SnapsToDevicePixels="True" 
										Data="M 9,4 L 11,4 11,6 9,6 Z
											M 4,9 L 6,9 6,11 4,11 Z
											M 14,9 L 16,9 16,11 14,11 Z" />
							</Grid>
						</ToggleButton.Content>
					</ToggleButton>
					<ToggleButton x:Name="ShowTagBlockInfoToggleButton" Grid.Column="2" ToolTip="Toggle the default visibility of Tag Block Information"
								  IsChecked="{Binding Path=TagEditorShowBlockInformation}" Checked="PluginOptionToggleButton_OnChanged" Unchecked="PluginOptionToggleButton_OnChanged">
						<ToggleButton.Content>
							<TextBlock Foreground="#FFC5C5C5" FontSize="11">i(**)</TextBlock>
						</ToggleButton.Content>
					</ToggleButton>
					<ToggleButton x:Name="ShowEnumIndicesToggleButton" Grid.Column="3" ToolTip="Toggle the visibility of Enum Indices"
								  IsChecked="{Binding Path=TagEditorShowEnumIndex}" Checked="PluginOptionToggleButton_OnChanged" Unchecked="PluginOptionToggleButton_OnChanged">
						<ToggleButton.Content>
							<TextBlock Foreground="#FFC5C5C5" FontSize="11">e(#)</TextBlock>
						</ToggleButton.Content>
					</ToggleButton>
					<ToggleButton x:Name="ShowCommentsToggleButton" Grid.Column="4" ToolTip="Toggle the visibility of Comments"
								  IsChecked="{Binding Path=TagEditorShowComments}" Checked="PluginOptionToggleButton_OnChanged" Unchecked="PluginOptionToggleButton_OnChanged">
						<ToggleButton.Content>
							<Grid Width="20" Height="15">
								<Path Fill="#c5c5c5" SnapsToDevicePixels="True" 
										Data="M 3,3 L 7,3 7,7 3,7 Z
											M 8,3 L 12,3 12,7 8,7 Z
											M 13,3 L 17,3 17,7 13,7 Z
											M 3,8 L 17,8 17,12 3,12 Z" />
							</Grid>
						</ToggleButton.Content>
					</ToggleButton>
					<Button x:Name="ShowPluginRevisionButton" Grid.Column="5" ToolTip="Shows the Revision History for the plugin used to display the Tag Data."
							Click="ShowPluginRevisionButton_OnClick">
						<Button.Content>
							<Grid>
								<Ellipse Width="6" Height="6" Margin="5,4,0,0" VerticalAlignment="Top" 
											HorizontalAlignment="Left" StrokeThickness="1" Stroke="#c5c5c5" />

								<Path Fill="#c5c5c5" SnapsToDevicePixels="True"
									Data="M 7,1 L 9,1 9,5 7,5 Z
											M 3,6 L 6,6 6,8 3,8 Z
											M 7,9 L 9,9 9,13 7,13 Z
											M 10,6 L 17,6 17,8 10,8 Z" />
							</Grid>
						</Button.Content>
					</Button>
					<Grid Grid.Column="6" Background="#3e3e42" />
				</Grid>
			</Grid>
		</Grid>

		<GridSplitter Grid.Row="1" Grid.Column="0" Background="#2d2d30" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

		<Grid Grid.Row="2" Grid.Column="0" x:Name="PluginEditorGrid">
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition Height="17px" />
			</Grid.RowDefinitions>

			<avalonedit:TextEditor x:Name="PluginTextEditor" Height="Auto" Margin="0" SyntaxHighlighting="{Binding SyntaxHighlightingDefinition}"
									FontFamily="Consolas" FontSize="10pt" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
									Background="#252526" BorderBrush="#FF595959" Foreground="White"
									ShowLineNumbers="True" LineNumbersForeground="#FF237CAD">
				<i:Interaction.Behaviors>
					<behavior:AvalonEditBehavior GiveMeTheText="{Binding Path=PluginContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				</i:Interaction.Behaviors>
				<avalonedit:TextEditor.LayoutTransform>
					<ScaleTransform ScaleX="{Binding Path=SelectedItem.Tag, Converter={StaticResource IValueConverterPercentileToDecimal}, ElementName=PluginEditorZoomSelectorComboBox}" 
							ScaleY="{Binding Path=SelectedItem.Tag, Converter={StaticResource IValueConverterPercentileToDecimal}, ElementName=PluginEditorZoomSelectorComboBox}" />
				</avalonedit:TextEditor.LayoutTransform>
				<avalonedit:TextEditor.ContextMenu>
					<ContextMenu FontSize="12">
						<MenuItem Command="Cut"/>
						<MenuItem Command="Copy"/>
						<MenuItem Command="Paste"/>
					</ContextMenu>
				</avalonedit:TextEditor.ContextMenu>
			</avalonedit:TextEditor>

			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="66px" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.Resources>
					<ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="EditorComboBoxToggleButtonTemplate">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="16" />
							</Grid.ColumnDefinitions>
							<Border BorderBrush="#434346" CornerRadius="0" BorderThickness="1"
										Name="Border" Background="#333337" Grid.ColumnSpan="2" />
							<Border Margin="1,1,1,1" Name="TargetBorder" BorderBrush="Transparent"
										CornerRadius="0" BorderThickness="0,0,1,0" Background="#333337" Grid.Column="0" />
							<Path Margin="0,0,3,0" Data="M0,0L4,4 8,0z" HorizontalAlignment="Center"
										Fill="#989898" Name="Arrow" VerticalAlignment="Center" Width="8"
										Grid.Column="1" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="UIElement.IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="Border" Value="#1f1f20" />
								<Setter Property="Background" TargetName="TargetBorder" Value="#3f3f46" />
								<Setter Property="BorderBrush" TargetName="TargetBorder" Value="{DynamicResource AssemblyAccentBrush}" />
								<Setter Property="Fill" TargetName="Arrow" Value="White" />
							</Trigger>

							<Trigger Property="ToggleButton.IsChecked" Value="True">
								<Setter Property="Background" TargetName="Border" Value="#1f1f20" />
								<Setter Property="Background" TargetName="TargetBorder" Value="#3f3f46" />
								<Setter Property="BorderBrush" TargetName="TargetBorder" Value="{DynamicResource AssemblyAccentBrush}" />
								<Setter Property="Fill" TargetName="Arrow" Value="White" />
							</Trigger>
							<Trigger Property="UIElement.IsEnabled" Value="False">
								<Setter Property="Panel.Background" TargetName="Border" Value="#FF555558" />
								<Setter Property="Border.BorderBrush" TargetName="Border" Value="#FF555558" />
								<Setter Property="TextElement.Foreground" Value="#FFc4c4c4" />
								<Setter Property="Shape.Fill" TargetName="Arrow" Value="#66FFFFFF" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>

					<Style TargetType="{x:Type ToggleButton}">
						<Setter Property="Background" Value="#252526" />
						<Setter Property="BorderBrush" Value="#252526" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="Width" Value="22px" />
						<Setter Property="Height" Value="17px" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Margin" Value="1,0,0,0" />
						<Setter Property="HorizontalContentAlignment" Value="Center"/>
						<Setter Property="VerticalContentAlignment" Value="Center"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ToggleButton}">
									<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
																Content="{TemplateBinding Content}" 
																ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
																HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																RecognizesAccessKey="True" 
																SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
																VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
									<ControlTemplate.Triggers>
										<!-- Mouse Over // Not Checked -->
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="true" SourceName="border" />
												<Condition Property="IsPressed" Value="false" />
												<Condition Property="IsEnabled" Value="true" />
												<Condition Property="IsChecked" Value="false" />
											</MultiTrigger.Conditions>
											<Setter Property="Background" Value="#3e3e42" TargetName="border" />
											<Setter Property="BorderBrush" Value="#3e3e42" TargetName="border" />
										</MultiTrigger>

										<!-- Checked Button -->
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsChecked" Value="true" />
												<Condition Property="IsEnabled" Value="true" />
											</MultiTrigger.Conditions>
											<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrush}" TargetName="border" />
										</MultiTrigger>

										<!-- Disabled -->
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Background" Value="#FF575757" TargetName="border" />
											<Setter Property="BorderBrush" Value="#FF8B8B8B" TargetName="border" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Background" Value="#252526" />
						<Setter Property="BorderBrush" Value="#252526" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="Width" Value="22px" />
						<Setter Property="Height" Value="17px" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Margin" Value="1,0,0,0" />
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						<Setter Property="VerticalContentAlignment" Value="Stretch"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
												BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
												Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
																Content="{TemplateBinding Content}" 
																ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
																HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																RecognizesAccessKey="True" 
																SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
																VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
									<ControlTemplate.Triggers>
										<!-- Mouse Over // Not Pressed -->
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="true" SourceName="border" />
												<Condition Property="IsPressed" Value="false" />
											</MultiTrigger.Conditions>
											<Setter Property="Background" Value="#3e3e42" TargetName="border" />
											<Setter Property="BorderBrush" Value="#3e3e42" TargetName="border" />
										</MultiTrigger>

										<!-- Pressed -->
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsPressed" Value="true" />
											</MultiTrigger.Conditions>
											<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrush}" TargetName="border" />
										</MultiTrigger>

										<!-- Disabled -->
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Background" Value="#FF575757" TargetName="border" />
											<Setter Property="BorderBrush" Value="#FF8B8B8B" TargetName="border" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<Style TargetType="{x:Type ComboBox}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="True" />
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
						<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
						<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
						<Setter Property="TextElement.Foreground" Value="{StaticResource NormalForegroundBrush}" />
						<Setter Property="FocusVisualStyle" Value="{x:Null}" />
						<Setter Property="Foreground" Value="White" />
						<Setter Property="FontSize" Value="12" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ComboBox">
									<Grid>
										<ToggleButton ClickMode="Press" Name="ToggleButton" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
												Focusable="False" Template="{StaticResource EditorComboBoxToggleButtonTemplate}" Margin="0" Width="Auto" />
										<Grid VerticalAlignment="Center">
											<ContentPresenter Margin="5,0,23,0" HorizontalAlignment="Left"
																	Name="ContentSite" VerticalAlignment="Center"
																	ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
																	ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
																	Content="{TemplateBinding ComboBox.SelectionBoxItem}" TextElement.FontSize="11"
																	IsHitTestVisible="False" />
										</Grid>
										<TextBox Margin="3,3,23,3" Visibility="Hidden" HorizontalAlignment="Left"
														Name="PART_EditableTextBox" Background="Transparent" VerticalAlignment="Center"
														Style="{x:Null}" IsReadOnly="False" Focusable="True" xml:space="preserve"
														Template="{StaticResource ComboBoxTextBoxTemplate}" />
											<Popup Placement="Bottom" Name="Popup" Focusable="False" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
													PopupAnimation="Slide">
												<Grid MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
														MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
														Name="DropDown" SnapsToDevicePixels="True">
													<Border BorderBrush="#323236" BorderThickness="1,1,1,1" 
															Name="DropDownBorder" Background="#1b1b1c" />
													<ScrollViewer Name="DropDownScrollViewer" Margin="4,6,4,6"
																	SnapsToDevicePixels="True">
														<ItemsPresenter Name="ItemsPresenter"
																		KeyboardNavigation.DirectionalNavigation="Contained" />
													</ScrollViewer>
												</Grid>
											</Popup>
										</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="ItemsControl.HasItems" Value="False">
											<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
										</Trigger>
										<Trigger Property="UIElement.IsEnabled" Value="False">
											<Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
										</Trigger>
										<Trigger Property="ItemsControl.IsGrouping" Value="True">
											<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
										</Trigger>
										<Trigger Property="ComboBox.IsEditable" Value="True">
											<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
											<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
											<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Grid.Resources>
				<ComboBox x:Name="PluginEditorZoomSelectorComboBox" SelectedIndex="6" Width="62" Margin="0,0,3,0" HorizontalAlignment="Left">
					<ComboBoxItem Tag="20" Content="20%" />
					<ComboBoxItem Tag="35" Content="35%" />
					<ComboBoxItem Tag="50" Content="50%" />
					<ComboBoxItem Tag="65" Content="65%" />
					<ComboBoxItem Tag="70" Content="70%" />
					<ComboBoxItem Tag="85" Content="85%" />
					<ComboBoxItem Tag="100" Content="100%" />
				</ComboBox>
				<Grid Grid.Column="1" Background="#3e3e42" />
			</Grid>
		</Grid>

		<Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" BorderThickness="2,0,0,0" BorderBrush="#3e3e42">
			<StackPanel>
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="0,2" />
						<Setter Property="Height" Value="18" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Grid x:Name="Grid" Background="Transparent" Margin="{TemplateBinding Margin}" Height="{TemplateBinding Height}">
										<ContentPresenter Margin="{TemplateBinding Padding}" 
															  VerticalAlignment="Center" HorizontalAlignment="Center"/>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter TargetName="Grid" Property="Background" Value="#434343"></Setter>
										</Trigger>
										<Trigger Property="IsPressed" Value="True">
											<Setter TargetName="Grid" Property="Background" Value="{DynamicResource AssemblyAccentBrushSecondary}"></Setter>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</StackPanel.Resources>
				<Button Click="TagEditorButton_OnClick" MouseDoubleClick="TagEditorButton_OnMouseDoubleClick"
							ToolTip="Expand the Tag Editor">
					<Grid Width="11" Height="11" VerticalAlignment="Center" Margin="0">
						<Path Width="9" Height="9" Fill="#fff"
								  Data="M 0,0 L 9,0 9,9 0,9 0,1 1,1 1,8 8,8 8,1 0,1 Z
										M 2,2 L 7,2 7,7 2,7 Z" />

						<Ellipse Width="5" Height="5" StrokeThickness="1" Stroke="#fff" Fill="#424242" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
					</Grid>
				</Button>
				<Button Click="PluginEditorButton_OnClick" MouseDoubleClick="PluginEditorButton_OnMouseDoubleClick"
							ToolTip="Expand the Plugin Editor">
					<Grid Width="11" Height="11" VerticalAlignment="Center">
						<Path Width="9" Height="9" Fill="#fff"
									  Data="M 0,0 L 9,0 9,9 0,9 0,1 1,1 1,8 8,8 8,1 0,1 Z
											M 3,3 L 4,3 4,4 3,4 3,5 4,5 4,6 3,6 3,5 2,5 2,4 3,4 Z
											M 5,3 L 6,3 6,4 7,4 7,5 6,5 6,6 5,6 5,5 6,5 6,4 5,4 Z" />
					</Grid>
				</Button>
			</StackPanel>
		</Border>
	</Grid>
</UserControl>
