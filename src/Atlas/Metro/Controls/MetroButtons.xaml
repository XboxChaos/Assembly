<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="#999999" />
		<Setter Property="Background" Value="#222222" />
		<Setter Property="BorderBrush" Value="#616161" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="Height" Value="22" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="Grid">
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  Margin="{TemplateBinding Padding}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
					</Grid>

					<ControlTemplate.Triggers>

						<!-- Defaulted Button -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" SourceName="Grid" />
								<Condition Property="IsPressed" Value="false" />
								<Condition Property="IsEnabled" Value="true" />
								<Condition Property="IsDefaulted" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrush}" TargetName="Border" />
						</MultiTrigger>

						<!-- Focused Button -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" SourceName="Grid" />
								<Condition Property="IsPressed" Value="false" />
								<Condition Property="IsEnabled" Value="true" />
								<Condition Property="IsDefaulted" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrush}" TargetName="Border" />
						</MultiTrigger>

						<!-- Mouse Over -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" SourceName="Grid" />
								<Condition Property="IsPressed" Value="false" />
								<Condition Property="IsEnabled" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#393939" TargetName="Border" />
							<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrushSecondary}" TargetName="Border" />
						</MultiTrigger>

						<!-- Mouse Pressed -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" SourceName="Grid" />
								<Condition Property="IsPressed" Value="true" />
								<Condition Property="IsEnabled" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#333333" TargetName="Border" />
							<Setter Property="BorderBrush" Value="{DynamicResource AssemblyAccentBrushSecondary}" TargetName="Border" />
						</MultiTrigger>

						<!-- Disabled -->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="#FF575757" TargetName="Border" />
							<Setter Property="BorderBrush" Value="#FF8B8B8B" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="WindowActionButton" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource TextBrushPrimary}" />
		<Setter Property="FontFamily" Value="{DynamicResource MetroFontSemiBold}" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontWeight" Value="SemiBold" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="34" />
		<Setter Property="Height" Value="26" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="Grid">
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" />
						<ContentPresenter HorizontalAlignment="Center" Margin="-10" VerticalAlignment="Center" RecognizesAccessKey="True" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{DynamicResource WindowActionHoverBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" Value="{DynamicResource AssemblyAccentBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TabActiveButtons" TargetType="Button">
		<Setter Property="Foreground" Value="{DynamicResource AssemblyAccentBrush}" />
		<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Margin" Value="5,0,0,0" />
		<Setter Property="FontWeight" Value="SemiBold" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="Grid">
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" />
						<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource AssemblyAccentBrushSecondary}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>