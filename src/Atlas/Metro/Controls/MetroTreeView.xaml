<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:converters="clr-namespace:Atlas.Converters"
					xmlns:custom="clr-namespace:Atlas.Metro.Controls.Custom">
	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,5 5,0 z" />
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type custom:MetroTreeViewToggle}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type custom:MetroTreeViewToggle}">
					<Border Background="Transparent" Height="16" Width="16">
						<Path x:Name="ExpandPath" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="White">
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterY="3" CenterX="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<!-- Checked Triangle Rotation -->
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterY="3" CenterX="3" />
								</Setter.Value>
							</Setter>
							<Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
							<Setter Property="Margin" TargetName="ExpandPath" Value="2,0,0,0" />
						</Trigger>
						
						<!-- Is Active -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="True" />
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="White" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="Transparent" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="True" />
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="White" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="White" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="True" />
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="White" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="White" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="True" />
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="White" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="Transparent" />
						</MultiTrigger>
						
						<!-- Not Active -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="False" />
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource AssemblyAccentBrushSecondary}" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource AssemblyAccentBrushSecondary}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="False" />
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="White" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="White" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="False" />
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource AssemblyAccentBrushSecondary}" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="Transparent" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="False" />
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="White" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="Transparent" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="1,0,0,0" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<ControlTemplate.Resources>
						<converters:LeftMarginMultiplierConverter Length="19" x:Key="LengthConverter" />
					</ControlTemplate.Resources>
					<StackPanel>
						<Border Name="Bd"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}">
							<Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<custom:MetroTreeViewToggle x:Name="Expander"
											  Style="{StaticResource ExpandCollapseToggleStyle}"
											  IsActive="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
											  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
											  ClickMode="Press"/>
								<ContentPresenter x:Name="PART_Header"
												  Grid.Column="1"
												  ContentSource="Header"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource AssemblyAccentBrushSecondary}" />
							<Setter Property="Foreground" Value="White" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="#3f3f46" />
							<Setter Property="Foreground" Value="White" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TreeView}">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ContentPresenter, AncestorLevel=1}}" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>